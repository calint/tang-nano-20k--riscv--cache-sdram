
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# # generated - do not edit (see `configuration.py`)
# .global _start
# _start:
#     li sp, 0x800000
       0:	00800137          	lui	sp,0x800
#     j run
       4:	0040006f          	j	8 <run>

00000008 <run>:
       8:	f8010113          	addi	sp,sp,-128 # 7fff80 <__bss_end+0x7fe078>
       c:	06112e23          	sw	ra,124(sp)
      10:	06812c23          	sw	s0,120(sp)
      14:	07212823          	sw	s2,112(sp)
      18:	07312623          	sw	s3,108(sp)
      1c:	07412423          	sw	s4,104(sp)
      20:	07512223          	sw	s5,100(sp)
      24:	06912a23          	sw	s1,116(sp)
      28:	374010ef          	jal	139c <_ZL12initiate_bssv>
# static auto led_set(int32_t const bits) -> void { *LED = bits; }
      2c:	00a00793          	li	a5,10
      30:	fef02e23          	sw	a5,-4(zero) # fffffffc <__bss_end+0xffffe0f4>
#   // initiate statics in freestanding build
# 
#   led_set(0b1010);
#   // turn some leds on
# 
#   uart_send_str(ascii_art);
      34:	000027b7          	lui	a5,0x2
      38:	efc7a503          	lw	a0,-260(a5) # 1efc <_ZL9ascii_art>
#   uart_send_str(hello);
# 
#   entity_id_t active_entity = 1;
      3c:	00100413          	li	s0,1
#   command_buffer cmd_buf{};
# 
#   while (true) {
#     entity const &ent = entities[active_entity];
#     print_location(ent.location, active_entity);
      40:	00002ab7          	lui	s5,0x2
#   uart_send_str(ascii_art);
      44:	0cc010ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str(hello);
      48:	000027b7          	lui	a5,0x2
      4c:	ef87a503          	lw	a0,-264(a5) # 1ef8 <_ZL5hello>
#     uart_send_str(ent.name);
#     uart_send_str(" > ");
      50:	00002a37          	lui	s4,0x2
#     input(cmd_buf);
#     uart_send_str("\r\n");
      54:	000029b7          	lui	s3,0x2
#   uart_send_str(hello);
      58:	0b8010ef          	jal	1110 <_ZL13uart_send_strPKc>
#   command_buffer cmd_buf{};
      5c:	05200613          	li	a2,82
      60:	00000593          	li	a1,0
      64:	00c10513          	addi	a0,sp,12
      68:	2f4010ef          	jal	135c <memset>
#     handle_input(active_entity, cmd_buf);
#     active_entity = active_entity == 1 ? 2 : 1;
      6c:	00300913          	li	s2,3
#     print_location(ent.location, active_entity);
      70:	00141793          	slli	a5,s0,0x1
      74:	008787b3          	add	a5,a5,s0
      78:	00279793          	slli	a5,a5,0x2
      7c:	408787b3          	sub	a5,a5,s0
      80:	00279793          	slli	a5,a5,0x2
      84:	b3ca8493          	addi	s1,s5,-1220 # 1b3c <_ZL8entities>
      88:	00f484b3          	add	s1,s1,a5
      8c:	0044c503          	lbu	a0,4(s1)
      90:	00040593          	mv	a1,s0
      94:	358000ef          	jal	3ec <_ZL14print_locationhh>
#     uart_send_str(ent.name);
      98:	0004a503          	lw	a0,0(s1)
      9c:	074010ef          	jal	1110 <_ZL13uart_send_strPKc>
#     uart_send_str(" > ");
      a0:	81ca0513          	addi	a0,s4,-2020 # 181c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x410>
      a4:	06c010ef          	jal	1110 <_ZL13uart_send_strPKc>
#     input(cmd_buf);
      a8:	00c10513          	addi	a0,sp,12
      ac:	4bd000ef          	jal	d68 <_ZL5inputR14command_buffer>
#     uart_send_str("\r\n");
      b0:	82098513          	addi	a0,s3,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
      b4:	05c010ef          	jal	1110 <_ZL13uart_send_strPKc>
#     handle_input(active_entity, cmd_buf);
      b8:	00040513          	mv	a0,s0
      bc:	00c10593          	addi	a1,sp,12
#     active_entity = active_entity == 1 ? 2 : 1;
      c0:	40890433          	sub	s0,s2,s0
#     handle_input(active_entity, cmd_buf);
      c4:	00c000ef          	jal	d0 <_ZL12handle_inputhR14command_buffer>
#     active_entity = active_entity == 1 ? 2 : 1;
      c8:	0ff47413          	zext.b	s0,s0
      cc:	fa5ff06f          	j	70 <run+0x68>

000000d0 <_ZL12handle_inputhR14command_buffer>:
#   }
# }
# 
# static auto handle_input(entity_id_t const eid,
#                          command_buffer &cmd_buf) -> void {
      d0:	fd010113          	addi	sp,sp,-48
      d4:	02912223          	sw	s1,36(sp)
      d8:	03212023          	sw	s2,32(sp)
      dc:	00050493          	mv	s1,a0
      e0:	02112623          	sw	ra,44(sp)
      e4:	02812423          	sw	s0,40(sp)
      e8:	00010793          	mv	a5,sp
#   char const *words[8];
#   char *ptr = cmd_buf.command_line();
#   size_t nwords = 0;
      ec:	00000913          	li	s2,0
#   while (true) {
#     words[nwords] = ptr;
#     ++nwords;
#     while (*ptr && *ptr != ' ') {
      f0:	02000513          	li	a0,32
#     if (!*ptr) {
#       break;
#     }
#     *ptr = '\0';
#     ++ptr;
#     if (nwords == sizeof(words) / sizeof(char const *)) {
      f4:	00800613          	li	a2,8
#     words[nwords] = ptr;
      f8:	00b7a023          	sw	a1,0(a5)
#     ++nwords;
      fc:	00190913          	addi	s2,s2,1
#     while (*ptr && *ptr != ' ') {
     100:	0005c683          	lbu	a3,0(a1)
#       ++ptr;
     104:	00058713          	mv	a4,a1
#     while (*ptr && *ptr != ' ') {
     108:	02068263          	beqz	a3,12c <_ZL12handle_inputhR14command_buffer+0x5c>
#       ++ptr;
     10c:	00158593          	addi	a1,a1,1
#     while (*ptr && *ptr != ' ') {
     110:	fea698e3          	bne	a3,a0,100 <_ZL12handle_inputhR14command_buffer+0x30>
#     *ptr = '\0';
     114:	00070023          	sb	zero,0(a4)
#     if (nwords == sizeof(words) / sizeof(char const *)) {
     118:	00478793          	addi	a5,a5,4
     11c:	fcc91ee3          	bne	s2,a2,f8 <_ZL12handle_inputhR14command_buffer+0x28>
#       uart_send_str("too many words, some ignored\r\n\r\n");
     120:	00002537          	lui	a0,0x2
     124:	82450513          	addi	a0,a0,-2012 # 1824 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x418>
     128:	7e9000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   }
#   // for (size_t i = 0; i < nwords; i++) {
#   //   uart_send_str(words[i]);
#   //   uart_send_str("\r\n");
#   // }
#   if (strings_equal(words[0], "help")) {
     12c:	00012403          	lw	s0,0(sp)
     130:	000025b7          	lui	a1,0x2
     134:	84858593          	addi	a1,a1,-1976 # 1848 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x43c>
     138:	00040513          	mv	a0,s0
     13c:	6f5000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     140:	00050e63          	beqz	a0,15c <_ZL12handle_inputhR14command_buffer+0x8c>
#   } else if (strings_equal(words[0], "q")) {
#     exit(0);
#   } else {
#     uart_send_str("not understood\r\n\r\n");
#   }
# }
     144:	02812403          	lw	s0,40(sp)
     148:	02c12083          	lw	ra,44(sp)
     14c:	02412483          	lw	s1,36(sp)
     150:	02012903          	lw	s2,32(sp)
     154:	03010113          	addi	sp,sp,48
#     print_help();
     158:	3f10006f          	j	d48 <_ZL10print_helpv>
#   } else if (strings_equal(words[0], "i")) {
     15c:	000025b7          	lui	a1,0x2
     160:	85058593          	addi	a1,a1,-1968 # 1850 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x444>
     164:	00040513          	mv	a0,s0
     168:	6c9000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     16c:	02050663          	beqz	a0,198 <_ZL12handle_inputhR14command_buffer+0xc8>
#     action_inventory(eid);
     170:	00048513          	mv	a0,s1
     174:	4a0000ef          	jal	614 <_ZL16action_inventoryh>
#     uart_send_str("\r\n");
     178:	00002537          	lui	a0,0x2
     17c:	82050513          	addi	a0,a0,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
# }
     180:	02812403          	lw	s0,40(sp)
     184:	02c12083          	lw	ra,44(sp)
     188:	02412483          	lw	s1,36(sp)
     18c:	02012903          	lw	s2,32(sp)
     190:	03010113          	addi	sp,sp,48
#     uart_send_str("not understood\r\n\r\n");
     194:	77d0006f          	j	1110 <_ZL13uart_send_strPKc>
#   } else if (strings_equal(words[0], "t")) {
     198:	000025b7          	lui	a1,0x2
     19c:	85458593          	addi	a1,a1,-1964 # 1854 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x448>
     1a0:	00040513          	mv	a0,s0
     1a4:	68d000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     1a8:	02050c63          	beqz	a0,1e0 <_ZL12handle_inputhR14command_buffer+0x110>
#     if (nwords < 2) {
     1ac:	00100793          	li	a5,1
     1b0:	00f91863          	bne	s2,a5,1c0 <_ZL12handle_inputhR14command_buffer+0xf0>
#       uart_send_str("take what\r\n\r\n");
     1b4:	00002537          	lui	a0,0x2
     1b8:	85850513          	addi	a0,a0,-1960 # 1858 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x44c>
     1bc:	fc5ff06f          	j	180 <_ZL12handle_inputhR14command_buffer+0xb0>
# }
     1c0:	02812403          	lw	s0,40(sp)
#     action_take(eid, words[1]);
     1c4:	00412583          	lw	a1,4(sp)
# }
     1c8:	02c12083          	lw	ra,44(sp)
     1cc:	02012903          	lw	s2,32(sp)
#     action_take(eid, words[1]);
     1d0:	00048513          	mv	a0,s1
# }
     1d4:	02412483          	lw	s1,36(sp)
     1d8:	03010113          	addi	sp,sp,48
#     action_take(eid, words[1]);
     1dc:	50c0006f          	j	6e8 <_ZL11action_takehPKc>
#   } else if (strings_equal(words[0], "d")) {
     1e0:	000025b7          	lui	a1,0x2
     1e4:	86858593          	addi	a1,a1,-1944 # 1868 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x45c>
     1e8:	00040513          	mv	a0,s0
     1ec:	645000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     1f0:	02050c63          	beqz	a0,228 <_ZL12handle_inputhR14command_buffer+0x158>
#     if (nwords < 2) {
     1f4:	00100793          	li	a5,1
     1f8:	00f91863          	bne	s2,a5,208 <_ZL12handle_inputhR14command_buffer+0x138>
#       uart_send_str("drop what\r\n\r\n");
     1fc:	00002537          	lui	a0,0x2
     200:	86c50513          	addi	a0,a0,-1940 # 186c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x460>
     204:	f7dff06f          	j	180 <_ZL12handle_inputhR14command_buffer+0xb0>
# }
     208:	02812403          	lw	s0,40(sp)
#     action_drop(eid, words[1]);
     20c:	00412583          	lw	a1,4(sp)
# }
     210:	02c12083          	lw	ra,44(sp)
     214:	02012903          	lw	s2,32(sp)
#     action_drop(eid, words[1]);
     218:	00048513          	mv	a0,s1
# }
     21c:	02412483          	lw	s1,36(sp)
     220:	03010113          	addi	sp,sp,48
#     action_drop(eid, words[1]);
     224:	6700006f          	j	894 <_ZL11action_drophPKc>
#   } else if (strings_equal(words[0], "n")) {
     228:	000025b7          	lui	a1,0x2
     22c:	87c58593          	addi	a1,a1,-1924 # 187c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x470>
     230:	00040513          	mv	a0,s0
     234:	5fd000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
#     action_go(eid, 0);
     238:	00000593          	li	a1,0
#   } else if (strings_equal(words[0], "n")) {
     23c:	00051e63          	bnez	a0,258 <_ZL12handle_inputhR14command_buffer+0x188>
#   } else if (strings_equal(words[0], "e")) {
     240:	000025b7          	lui	a1,0x2
     244:	88058593          	addi	a1,a1,-1920 # 1880 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x474>
     248:	00040513          	mv	a0,s0
     24c:	5e5000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     250:	02050263          	beqz	a0,274 <_ZL12handle_inputhR14command_buffer+0x1a4>
#     action_go(eid, 1);
     254:	00100593          	li	a1,1
# }
     258:	02812403          	lw	s0,40(sp)
     25c:	02c12083          	lw	ra,44(sp)
     260:	02012903          	lw	s2,32(sp)
#     action_go(eid, 1);
     264:	00048513          	mv	a0,s1
# }
     268:	02412483          	lw	s1,36(sp)
     26c:	03010113          	addi	sp,sp,48
#     action_go(eid, 1);
     270:	7cc0006f          	j	a3c <_ZL9action_gohh>
#   } else if (strings_equal(words[0], "s")) {
     274:	000025b7          	lui	a1,0x2
     278:	88458593          	addi	a1,a1,-1916 # 1884 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x478>
     27c:	00040513          	mv	a0,s0
     280:	5b1000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
#     action_go(eid, 2);
     284:	00200593          	li	a1,2
#   } else if (strings_equal(words[0], "s")) {
     288:	fc0518e3          	bnez	a0,258 <_ZL12handle_inputhR14command_buffer+0x188>
#   } else if (strings_equal(words[0], "w")) {
     28c:	000025b7          	lui	a1,0x2
     290:	88858593          	addi	a1,a1,-1912 # 1888 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x47c>
     294:	00040513          	mv	a0,s0
     298:	599000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
#     action_go(eid, 3);
     29c:	00300593          	li	a1,3
#   } else if (strings_equal(words[0], "w")) {
     2a0:	fa051ce3          	bnez	a0,258 <_ZL12handle_inputhR14command_buffer+0x188>
#   } else if (strings_equal(words[0], "g")) {
     2a4:	000025b7          	lui	a1,0x2
     2a8:	88c58593          	addi	a1,a1,-1908 # 188c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x480>
     2ac:	00040513          	mv	a0,s0
     2b0:	581000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     2b4:	04050863          	beqz	a0,304 <_ZL12handle_inputhR14command_buffer+0x234>
#     if (nwords < 2) {
     2b8:	00100793          	li	a5,1
     2bc:	00f91863          	bne	s2,a5,2cc <_ZL12handle_inputhR14command_buffer+0x1fc>
#       uart_send_str("give what\r\n\r\n");
     2c0:	00002537          	lui	a0,0x2
     2c4:	89050513          	addi	a0,a0,-1904 # 1890 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x484>
     2c8:	eb9ff06f          	j	180 <_ZL12handle_inputhR14command_buffer+0xb0>
#     if (nwords < 3) {
     2cc:	00200793          	li	a5,2
     2d0:	00f91863          	bne	s2,a5,2e0 <_ZL12handle_inputhR14command_buffer+0x210>
#       uart_send_str("give to whom\r\n\r\n");
     2d4:	00002537          	lui	a0,0x2
     2d8:	8a050513          	addi	a0,a0,-1888 # 18a0 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x494>
     2dc:	ea5ff06f          	j	180 <_ZL12handle_inputhR14command_buffer+0xb0>
# }
     2e0:	02812403          	lw	s0,40(sp)
#     action_give(eid, words[1], words[2]);
     2e4:	00812603          	lw	a2,8(sp)
     2e8:	00412583          	lw	a1,4(sp)
# }
     2ec:	02c12083          	lw	ra,44(sp)
     2f0:	02012903          	lw	s2,32(sp)
#     action_give(eid, words[1], words[2]);
     2f4:	00048513          	mv	a0,s1
# }
     2f8:	02412483          	lw	s1,36(sp)
     2fc:	03010113          	addi	sp,sp,48
#     action_give(eid, words[1], words[2]);
     300:	03d0006f          	j	b3c <_ZL11action_givehPKcS0_>
#   } else if (strings_equal(words[0], "m")) {
     304:	000025b7          	lui	a1,0x2
     308:	8b458593          	addi	a1,a1,-1868 # 18b4 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4a8>
     30c:	00040513          	mv	a0,s0
     310:	521000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     314:	00050e63          	beqz	a0,330 <_ZL12handle_inputhR14command_buffer+0x260>
# }
     318:	02812403          	lw	s0,40(sp)
     31c:	02c12083          	lw	ra,44(sp)
     320:	02412483          	lw	s1,36(sp)
     324:	02012903          	lw	s2,32(sp)
     328:	03010113          	addi	sp,sp,48
#     action_mem_test();
     32c:	6310006f          	j	115c <_ZL15action_mem_testv>
#   } else if (strings_equal(words[0], "sds")) {
     330:	000025b7          	lui	a1,0x2
     334:	8b858593          	addi	a1,a1,-1864 # 18b8 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4ac>
     338:	00040513          	mv	a0,s0
     33c:	4f5000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     340:	00050e63          	beqz	a0,35c <_ZL12handle_inputhR14command_buffer+0x28c>
# }
     344:	02812403          	lw	s0,40(sp)
     348:	02c12083          	lw	ra,44(sp)
     34c:	02412483          	lw	s1,36(sp)
     350:	02012903          	lw	s2,32(sp)
     354:	03010113          	addi	sp,sp,48
#     action_sdcard_status();
     358:	7490006f          	j	12a0 <_ZL20action_sdcard_statusv>
#   } else if (strings_equal(words[0], "sdr")) {
     35c:	000025b7          	lui	a1,0x2
     360:	8bc58593          	addi	a1,a1,-1860 # 18bc <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4b0>
     364:	00040513          	mv	a0,s0
     368:	4c9000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     36c:	00050e63          	beqz	a0,388 <_ZL12handle_inputhR14command_buffer+0x2b8>
# }
     370:	02812403          	lw	s0,40(sp)
     374:	02c12083          	lw	ra,44(sp)
     378:	02412483          	lw	s1,36(sp)
     37c:	02012903          	lw	s2,32(sp)
     380:	03010113          	addi	sp,sp,48
#     action_sdcard_test_read();
     384:	6790006f          	j	11fc <_ZL23action_sdcard_test_readv>
#   } else if (strings_equal(words[0], "sdw")) {
     388:	000025b7          	lui	a1,0x2
     38c:	8c058593          	addi	a1,a1,-1856 # 18c0 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4b4>
     390:	00040513          	mv	a0,s0
     394:	49d000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     398:	00050e63          	beqz	a0,3b4 <_ZL12handle_inputhR14command_buffer+0x2e4>
# }
     39c:	02812403          	lw	s0,40(sp)
     3a0:	02c12083          	lw	ra,44(sp)
     3a4:	02412483          	lw	s1,36(sp)
     3a8:	02012903          	lw	s2,32(sp)
     3ac:	03010113          	addi	sp,sp,48
#     action_sdcard_test_write();
     3b0:	6ad0006f          	j	125c <_ZL24action_sdcard_test_writev>
#   } else if (strings_equal(words[0], "q")) {
     3b4:	000025b7          	lui	a1,0x2
     3b8:	8c458593          	addi	a1,a1,-1852 # 18c4 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4b8>
     3bc:	00040513          	mv	a0,s0
     3c0:	471000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     3c4:	00051863          	bnez	a0,3d4 <_ZL12handle_inputhR14command_buffer+0x304>
#     uart_send_str("not understood\r\n\r\n");
     3c8:	00002537          	lui	a0,0x2
     3cc:	8c850513          	addi	a0,a0,-1848 # 18c8 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4bc>
     3d0:	db1ff06f          	j	180 <_ZL12handle_inputhR14command_buffer+0xb0>
# }
     3d4:	02c12083          	lw	ra,44(sp)
     3d8:	02812403          	lw	s0,40(sp)
     3dc:	02412483          	lw	s1,36(sp)
     3e0:	02012903          	lw	s2,32(sp)
     3e4:	03010113          	addi	sp,sp,48
     3e8:	00008067          	ret

000003ec <_ZL14print_locationhh>:
# 
# static auto print_location(location_id_t const lid,
#                            entity_id_t const eid_exclude_from_output) -> void {
     3ec:	fb010113          	addi	sp,sp,-80
     3f0:	03312e23          	sw	s3,60(sp)
     3f4:	00050993          	mv	s3,a0
#   location &loc = locations[lid];
#   uart_send_str("u r in ");
     3f8:	00002537          	lui	a0,0x2
     3fc:	8dc50513          	addi	a0,a0,-1828 # 18dc <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4d0>
#                            entity_id_t const eid_exclude_from_output) -> void {
     400:	04112623          	sw	ra,76(sp)
     404:	00b12623          	sw	a1,12(sp)
     408:	04812423          	sw	s0,72(sp)
     40c:	04912223          	sw	s1,68(sp)
     410:	05212023          	sw	s2,64(sp)
     414:	03412c23          	sw	s4,56(sp)
     418:	03512a23          	sw	s5,52(sp)
     41c:	03712623          	sw	s7,44(sp)
     420:	03812423          	sw	s8,40(sp)
     424:	03912223          	sw	s9,36(sp)
     428:	03612823          	sw	s6,48(sp)
     42c:	03a12023          	sw	s10,32(sp)
     430:	01b12e23          	sw	s11,28(sp)
#   uart_send_str(loc.name);
     434:	00299913          	slli	s2,s3,0x2
#   uart_send_str("u r in ");
     438:	4d9000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str(loc.name);
     43c:	000024b7          	lui	s1,0x2
     440:	013907b3          	add	a5,s2,s3
     444:	00579793          	slli	a5,a5,0x5
     448:	bc048413          	addi	s0,s1,-1088 # 1bc0 <_ZL9locations>
     44c:	00f40433          	add	s0,s0,a5
     450:	00042503          	lw	a0,0(s0)
     454:	00040a93          	mv	s5,s0
#     for (size_t i = 0; i < len; ++i) {
     458:	00040b93          	mv	s7,s0
#   uart_send_str(loc.name);
     45c:	4b5000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str("\r\nu c: ");
     460:	00002537          	lui	a0,0x2
     464:	8e450513          	addi	a0,a0,-1820 # 18e4 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4d8>
     468:	4a9000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     for (size_t i = 0; i < len; ++i) {
     46c:	00000a13          	li	s4,0
     470:	bc048493          	addi	s1,s1,-1088
#   // print objects at location
#   {
#     uint32_t counter = 0;
#     loc.objects.for_each_until_false([&](object_id_t const id) {
#       if (counter++) {
#         uart_send_str(", ");
     474:	00002c37          	lui	s8,0x2
#       }
#       uart_send_str(objects[id].name);
     478:	00002cb7          	lui	s9,0x2
#     for (size_t i = 0; i < len; ++i) {
     47c:	08442783          	lw	a5,132(s0)
     480:	0cfa6a63          	bltu	s4,a5,554 <_ZL14print_locationhh+0x168>
#       return true;
#     });
#     if (!counter) {
     484:	000a1863          	bnez	s4,494 <_ZL14print_locationhh+0xa8>
#       uart_send_str("nothing");
     488:	00002537          	lui	a0,0x2
     48c:	8f050513          	addi	a0,a0,-1808 # 18f0 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4e4>
     490:	481000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str("\r\n");
     494:	00002bb7          	lui	s7,0x2
     498:	820b8513          	addi	a0,s7,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
#     for (size_t i = 0; i < len; ++i) {
     49c:	01390a33          	add	s4,s2,s3
#     uart_send_str("\r\n");
     4a0:	471000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     for (size_t i = 0; i < len; ++i) {
     4a4:	005a1a13          	slli	s4,s4,0x5
#   }
# 
#   // print entities in location
#   {
#     uint32_t counter = 0;
     4a8:	00000793          	li	a5,0
#     for (size_t i = 0; i < len; ++i) {
     4ac:	00000b13          	li	s6,0
     4b0:	01448a33          	add	s4,s1,s4
#         return true;
#       }
#       if (counter++) {
#         uart_send_str(", ");
#       }
#       uart_send_str(entities[id].name);
     4b4:	00002c37          	lui	s8,0x2
#         uart_send_str(", ");
     4b8:	00002cb7          	lui	s9,0x2
#     for (size_t i = 0; i < len; ++i) {
     4bc:	090a2683          	lw	a3,144(s4)
     4c0:	0cdb6263          	bltu	s6,a3,584 <_ZL14print_locationhh+0x198>
#       return true;
#     });
#     if (counter != 0) {
     4c4:	00078863          	beqz	a5,4d4 <_ZL14print_locationhh+0xe8>
#       uart_send_str(" is here\r\n");
     4c8:	00002537          	lui	a0,0x2
     4cc:	8f850513          	addi	a0,a0,-1800 # 18f8 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4ec>
     4d0:	441000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   auto length() const -> size_t { return len; }
     4d4:	01390933          	add	s2,s2,s3
     4d8:	00591913          	slli	s2,s2,0x5
#   }
# 
#   // print exits from location
#   {
#     uint32_t counter = 0;
#     uart_send_str("exits: ");
     4dc:	00002537          	lui	a0,0x2
#   auto length() const -> size_t { return len; }
     4e0:	012484b3          	add	s1,s1,s2
#     uart_send_str("exits: ");
     4e4:	90450513          	addi	a0,a0,-1788 # 1904 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4f8>
     4e8:	429000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   auto length() const -> size_t { return len; }
     4ec:	09c4a983          	lw	s3,156(s1)
#     auto &lse = loc.exits;
#     size_t const n = lse.length();
#     for (size_t i = 0; i < n; ++i) {
     4f0:	00002437          	lui	s0,0x2
     4f4:	ee040413          	addi	s0,s0,-288 # 1ee0 <_ZL10exit_names>
     4f8:	00000913          	li	s2,0
#     uint32_t counter = 0;
     4fc:	00000793          	li	a5,0
#     for (size_t i = 0; i < n; ++i) {
     500:	0d391a63          	bne	s2,s3,5d4 <_ZL14print_locationhh+0x1e8>
#       if (counter++) {
#         uart_send_str(", ");
#       }
#       uart_send_str(exit_names[i]);
#     }
#     if (counter == 0) {
     504:	00079863          	bnez	a5,514 <_ZL14print_locationhh+0x128>
#       uart_send_str("none");
     508:	00002537          	lui	a0,0x2
     50c:	90c50513          	addi	a0,a0,-1780 # 190c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x500>
     510:	401000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str("\r\n");
#   }
# }
     514:	04812403          	lw	s0,72(sp)
     518:	04c12083          	lw	ra,76(sp)
     51c:	04412483          	lw	s1,68(sp)
     520:	04012903          	lw	s2,64(sp)
     524:	03c12983          	lw	s3,60(sp)
     528:	03812a03          	lw	s4,56(sp)
     52c:	03412a83          	lw	s5,52(sp)
     530:	03012b03          	lw	s6,48(sp)
     534:	02812c03          	lw	s8,40(sp)
     538:	02412c83          	lw	s9,36(sp)
     53c:	02012d03          	lw	s10,32(sp)
     540:	01c12d83          	lw	s11,28(sp)
#     uart_send_str("\r\n");
     544:	820b8513          	addi	a0,s7,-2016
# }
     548:	02c12b83          	lw	s7,44(sp)
     54c:	05010113          	addi	sp,sp,80
#     uart_send_str("\r\n");
     550:	3c10006f          	j	1110 <_ZL13uart_send_strPKc>
#       if (!f(data[i])) {
     554:	004bcd03          	lbu	s10,4(s7)
#       if (counter++) {
     558:	000a0663          	beqz	s4,564 <_ZL14print_locationhh+0x178>
#         uart_send_str(", ");
     55c:	8ecc0513          	addi	a0,s8,-1812 # 18ec <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4e0>
     560:	3b1000ef          	jal	1110 <_ZL13uart_send_strPKc>
#       uart_send_str(objects[id].name);
     564:	b2cc8793          	addi	a5,s9,-1236 # 1b2c <_ZL7objects>
     568:	002d1d13          	slli	s10,s10,0x2
     56c:	01a787b3          	add	a5,a5,s10
     570:	0007a503          	lw	a0,0(a5)
     574:	001a0a13          	addi	s4,s4,1
     578:	001b8b93          	addi	s7,s7,1
     57c:	395000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     for (size_t i = 0; i < len; ++i) {
     580:	efdff06f          	j	47c <_ZL14print_locationhh+0x90>
#       if (!f(data[i])) {
     584:	08844d83          	lbu	s11,136(s0)
#       if (id == eid_exclude_from_output) {
     588:	00c12703          	lw	a4,12(sp)
     58c:	03b70e63          	beq	a4,s11,5c8 <_ZL14print_locationhh+0x1dc>
#       if (counter++) {
     590:	00178d13          	addi	s10,a5,1
     594:	00078663          	beqz	a5,5a0 <_ZL14print_locationhh+0x1b4>
#         uart_send_str(", ");
     598:	8ecc8513          	addi	a0,s9,-1812
     59c:	375000ef          	jal	1110 <_ZL13uart_send_strPKc>
#       uart_send_str(entities[id].name);
     5a0:	001d9793          	slli	a5,s11,0x1
     5a4:	01b787b3          	add	a5,a5,s11
     5a8:	00279793          	slli	a5,a5,0x2
     5ac:	41b787b3          	sub	a5,a5,s11
     5b0:	b3cc0693          	addi	a3,s8,-1220
     5b4:	00279793          	slli	a5,a5,0x2
     5b8:	00f687b3          	add	a5,a3,a5
     5bc:	0007a503          	lw	a0,0(a5)
     5c0:	351000ef          	jal	1110 <_ZL13uart_send_strPKc>
#       if (counter++) {
     5c4:	000d0793          	mv	a5,s10
#     for (size_t i = 0; i < len; ++i) {
     5c8:	001b0b13          	addi	s6,s6,1
     5cc:	00140413          	addi	s0,s0,1
     5d0:	eedff06f          	j	4bc <_ZL14print_locationhh+0xd0>
#     if (ix < len) {
     5d4:	09c4a703          	lw	a4,156(s1)
     5d8:	02e97663          	bgeu	s2,a4,604 <_ZL14print_locationhh+0x218>
#       if (!lse.at(i)) {
     5dc:	094ac703          	lbu	a4,148(s5)
     5e0:	02070263          	beqz	a4,604 <_ZL14print_locationhh+0x218>
#       if (counter++) {
     5e4:	00178a13          	addi	s4,a5,1
     5e8:	00078863          	beqz	a5,5f8 <_ZL14print_locationhh+0x20c>
#         uart_send_str(", ");
     5ec:	00002537          	lui	a0,0x2
     5f0:	8ec50513          	addi	a0,a0,-1812 # 18ec <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4e0>
     5f4:	31d000ef          	jal	1110 <_ZL13uart_send_strPKc>
#       uart_send_str(exit_names[i]);
     5f8:	00042503          	lw	a0,0(s0)
     5fc:	315000ef          	jal	1110 <_ZL13uart_send_strPKc>
#       if (counter++) {
     600:	000a0793          	mv	a5,s4
#     for (size_t i = 0; i < n; ++i) {
     604:	00190913          	addi	s2,s2,1
     608:	00440413          	addi	s0,s0,4
     60c:	001a8a93          	addi	s5,s5,1
     610:	ef1ff06f          	j	500 <_ZL14print_locationhh+0x114>

00000614 <_ZL16action_inventoryh>:
# 
# static auto action_inventory(entity_id_t const eid) -> void {
     614:	fe010113          	addi	sp,sp,-32
     618:	00912a23          	sw	s1,20(sp)
     61c:	00050493          	mv	s1,a0
     620:	00812c23          	sw	s0,24(sp)
#   uart_send_str("u have: ");
     624:	00002537          	lui	a0,0x2
     628:	00149413          	slli	s0,s1,0x1
     62c:	00940433          	add	s0,s0,s1
     630:	91450513          	addi	a0,a0,-1772 # 1914 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x508>
# static auto action_inventory(entity_id_t const eid) -> void {
     634:	01312623          	sw	s3,12(sp)
     638:	01412423          	sw	s4,8(sp)
     63c:	01512223          	sw	s5,4(sp)
     640:	00112e23          	sw	ra,28(sp)
     644:	01212823          	sw	s2,16(sp)
     648:	00241413          	slli	s0,s0,0x2
#   uart_send_str("u have: ");
     64c:	2c5000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uint32_t counter = 0;
#   entities[eid].objects.for_each_until_false([&](object_id_t const id) {
     650:	40940433          	sub	s0,s0,s1
     654:	000027b7          	lui	a5,0x2
     658:	00241413          	slli	s0,s0,0x2
     65c:	b3c78793          	addi	a5,a5,-1220 # 1b3c <_ZL8entities>
     660:	00f40433          	add	s0,s0,a5
#     for (size_t i = 0; i < len; ++i) {
     664:	00000493          	li	s1,0
     668:	00040993          	mv	s3,s0
#     if (counter++) {
#       uart_send_str(", ");
     66c:	00002a37          	lui	s4,0x2
#     }
#     uart_send_str(objects[id].name);
     670:	00002ab7          	lui	s5,0x2
#     for (size_t i = 0; i < len; ++i) {
     674:	0289a783          	lw	a5,40(s3)
     678:	04f4e063          	bltu	s1,a5,6b8 <_ZL16action_inventoryh+0xa4>
#     return true;
#   });
#   if (counter == 0) {
     67c:	00049863          	bnez	s1,68c <_ZL16action_inventoryh+0x78>
#     uart_send_str("nothing");
     680:	00002537          	lui	a0,0x2
     684:	8f050513          	addi	a0,a0,-1808 # 18f0 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4e4>
     688:	289000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   }
#   uart_send_str("\r\n");
# }
     68c:	01812403          	lw	s0,24(sp)
     690:	01c12083          	lw	ra,28(sp)
     694:	01412483          	lw	s1,20(sp)
     698:	01012903          	lw	s2,16(sp)
     69c:	00c12983          	lw	s3,12(sp)
     6a0:	00812a03          	lw	s4,8(sp)
     6a4:	00412a83          	lw	s5,4(sp)
#   uart_send_str("\r\n");
     6a8:	00002537          	lui	a0,0x2
     6ac:	82050513          	addi	a0,a0,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
# }
     6b0:	02010113          	addi	sp,sp,32
#   uart_send_str("\r\n");
     6b4:	25d0006f          	j	1110 <_ZL13uart_send_strPKc>
#       if (!f(data[i])) {
     6b8:	00844903          	lbu	s2,8(s0)
#     if (counter++) {
     6bc:	00048663          	beqz	s1,6c8 <_ZL16action_inventoryh+0xb4>
#       uart_send_str(", ");
     6c0:	8eca0513          	addi	a0,s4,-1812 # 18ec <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x4e0>
     6c4:	24d000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     uart_send_str(objects[id].name);
     6c8:	b2ca8793          	addi	a5,s5,-1236 # 1b2c <_ZL7objects>
     6cc:	00291913          	slli	s2,s2,0x2
     6d0:	012787b3          	add	a5,a5,s2
     6d4:	0007a503          	lw	a0,0(a5)
     6d8:	00148493          	addi	s1,s1,1
     6dc:	00140413          	addi	s0,s0,1
     6e0:	231000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     for (size_t i = 0; i < len; ++i) {
     6e4:	f91ff06f          	j	674 <_ZL16action_inventoryh+0x60>

000006e8 <_ZL11action_takehPKc>:
# 
# static auto action_take(entity_id_t const eid, name_t const obj_nm) -> void {
     6e8:	fb010113          	addi	sp,sp,-80
     6ec:	04812423          	sw	s0,72(sp)
#   entity &ent = entities[eid];
#   auto &lso = locations[ent.location].objects;
     6f0:	00151413          	slli	s0,a0,0x1
     6f4:	00a40733          	add	a4,s0,a0
     6f8:	00271713          	slli	a4,a4,0x2
     6fc:	000027b7          	lui	a5,0x2
     700:	40a70733          	sub	a4,a4,a0
     704:	b3c78693          	addi	a3,a5,-1220 # 1b3c <_ZL8entities>
     708:	00271713          	slli	a4,a4,0x2
     70c:	00e68733          	add	a4,a3,a4
# static auto action_take(entity_id_t const eid, name_t const obj_nm) -> void {
     710:	04912223          	sw	s1,68(sp)
     714:	03312e23          	sw	s3,60(sp)
     718:	03412c23          	sw	s4,56(sp)
     71c:	03512a23          	sw	s5,52(sp)
     720:	03612823          	sw	s6,48(sp)
     724:	03712623          	sw	s7,44(sp)
     728:	03812423          	sw	s8,40(sp)
     72c:	03a12023          	sw	s10,32(sp)
     730:	01b12e23          	sw	s11,28(sp)
     734:	04112623          	sw	ra,76(sp)
     738:	05212023          	sw	s2,64(sp)
     73c:	03912223          	sw	s9,36(sp)
#   auto &lso = locations[ent.location].objects;
     740:	00474903          	lbu	s2,4(a4)
#   auto length() const -> size_t { return len; }
     744:	000026b7          	lui	a3,0x2
     748:	bc068a93          	addi	s5,a3,-1088 # 1bc0 <_ZL9locations>
     74c:	00291d13          	slli	s10,s2,0x2
     750:	012d0733          	add	a4,s10,s2
     754:	00571713          	slli	a4,a4,0x5
     758:	00ea8ab3          	add	s5,s5,a4
     75c:	084aa983          	lw	s3,132(s5)
# static auto action_take(entity_id_t const eid, name_t const obj_nm) -> void {
     760:	00050a13          	mv	s4,a0
#   size_t const n = lso.length();
#   for (size_t i = 0; i < n; ++i) {
     764:	000a8c13          	mv	s8,s5
     768:	00000b13          	li	s6,0
     76c:	b3c78493          	addi	s1,a5,-1220
     770:	bc068d93          	addi	s11,a3,-1088
#     object_id_t const oid = lso.at(i);
#     if (!strings_equal(objects[oid].name, obj_nm)) {
     774:	00002bb7          	lui	s7,0x2
#   for (size_t i = 0; i < n; ++i) {
     778:	053b1863          	bne	s6,s3,7c8 <_ZL11action_takehPKc+0xe0>
#     if (ent.objects.add(oid)) {
#       lso.remove_at_index(i);
#     }
#     return;
#   }
#   uart_send_str(obj_nm);
     77c:	00058513          	mv	a0,a1
     780:	191000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str(" not here\r\n\r\n");
# }
     784:	04812403          	lw	s0,72(sp)
     788:	04c12083          	lw	ra,76(sp)
     78c:	04412483          	lw	s1,68(sp)
     790:	04012903          	lw	s2,64(sp)
     794:	03c12983          	lw	s3,60(sp)
     798:	03812a03          	lw	s4,56(sp)
     79c:	03412a83          	lw	s5,52(sp)
     7a0:	03012b03          	lw	s6,48(sp)
     7a4:	02c12b83          	lw	s7,44(sp)
     7a8:	02812c03          	lw	s8,40(sp)
     7ac:	02412c83          	lw	s9,36(sp)
     7b0:	02012d03          	lw	s10,32(sp)
     7b4:	01c12d83          	lw	s11,28(sp)
#   uart_send_str(" not here\r\n\r\n");
     7b8:	00002537          	lui	a0,0x2
     7bc:	92050513          	addi	a0,a0,-1760 # 1920 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x514>
# }
     7c0:	05010113          	addi	sp,sp,80
#   uart_send_str(" not here\r\n\r\n");
     7c4:	14d0006f          	j	1110 <_ZL13uart_send_strPKc>
#       return data[ix];
     7c8:	004c4c83          	lbu	s9,4(s8)
#     if (!strings_equal(objects[oid].name, obj_nm)) {
     7cc:	b2cb8793          	addi	a5,s7,-1236 # 1b2c <_ZL7objects>
     7d0:	00b12623          	sw	a1,12(sp)
     7d4:	002c9693          	slli	a3,s9,0x2
     7d8:	00d787b3          	add	a5,a5,a3
     7dc:	0007a503          	lw	a0,0(a5)
     7e0:	051000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     7e4:	00051a63          	bnez	a0,7f8 <_ZL11action_takehPKc+0x110>
     7e8:	00c12583          	lw	a1,12(sp)
     7ec:	001c0c13          	addi	s8,s8,1
#   for (size_t i = 0; i < n; ++i) {
     7f0:	001b0b13          	addi	s6,s6,1
     7f4:	f85ff06f          	j	778 <_ZL11action_takehPKc+0x90>
#     if (len == Size - 1) {
     7f8:	01440433          	add	s0,s0,s4
     7fc:	00241413          	slli	s0,s0,0x2
     800:	41440433          	sub	s0,s0,s4
     804:	00241413          	slli	s0,s0,0x2
     808:	008487b3          	add	a5,s1,s0
     80c:	0287a703          	lw	a4,40(a5)
     810:	01f00693          	li	a3,31
     814:	02d70a63          	beq	a4,a3,848 <_ZL11action_takehPKc+0x160>
#     --len;
     818:	012d0933          	add	s2,s10,s2
     81c:	00591913          	slli	s2,s2,0x5
#     data[len] = elem;
     820:	00e786b3          	add	a3,a5,a4
#     --len;
     824:	fff98993          	addi	s3,s3,-1
#     ++len;
     828:	00170713          	addi	a4,a4,1
#     --len;
     82c:	012d8933          	add	s2,s11,s2
#     ++len;
     830:	02e7a423          	sw	a4,40(a5)
#     data[len] = elem;
     834:	01968423          	sb	s9,8(a3)
#     --len;
     838:	09392223          	sw	s3,132(s2)
     83c:	016a87b3          	add	a5,s5,s6
#     for (size_t i = ix; i < len; ++i) {
     840:	00178793          	addi	a5,a5,1
     844:	053b6063          	bltu	s6,s3,884 <_ZL11action_takehPKc+0x19c>
# }
     848:	04c12083          	lw	ra,76(sp)
     84c:	04812403          	lw	s0,72(sp)
     850:	04412483          	lw	s1,68(sp)
     854:	04012903          	lw	s2,64(sp)
     858:	03c12983          	lw	s3,60(sp)
     85c:	03812a03          	lw	s4,56(sp)
     860:	03412a83          	lw	s5,52(sp)
     864:	03012b03          	lw	s6,48(sp)
     868:	02c12b83          	lw	s7,44(sp)
     86c:	02812c03          	lw	s8,40(sp)
     870:	02412c83          	lw	s9,36(sp)
     874:	02012d03          	lw	s10,32(sp)
     878:	01c12d83          	lw	s11,28(sp)
     87c:	05010113          	addi	sp,sp,80
     880:	00008067          	ret
#       data[i] = data[i + 1];
     884:	0047c703          	lbu	a4,4(a5)
     888:	001b0b13          	addi	s6,s6,1
     88c:	00e781a3          	sb	a4,3(a5)
#     for (size_t i = ix; i < len; ++i) {
     890:	fb1ff06f          	j	840 <_ZL11action_takehPKc+0x158>

00000894 <_ZL11action_drophPKc>:
# 
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     894:	fd010113          	addi	sp,sp,-48
     898:	02812423          	sw	s0,40(sp)
#   auto length() const -> size_t { return len; }
     89c:	00151413          	slli	s0,a0,0x1
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     8a0:	02912223          	sw	s1,36(sp)
#   auto length() const -> size_t { return len; }
     8a4:	00a404b3          	add	s1,s0,a0
     8a8:	00249493          	slli	s1,s1,0x2
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     8ac:	01412c23          	sw	s4,24(sp)
#   auto length() const -> size_t { return len; }
     8b0:	40a484b3          	sub	s1,s1,a0
     8b4:	00002a37          	lui	s4,0x2
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     8b8:	03212023          	sw	s2,32(sp)
#   auto length() const -> size_t { return len; }
     8bc:	00249493          	slli	s1,s1,0x2
     8c0:	b3ca0913          	addi	s2,s4,-1220 # 1b3c <_ZL8entities>
     8c4:	00990933          	add	s2,s2,s1
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     8c8:	01812423          	sw	s8,8(sp)
#   auto length() const -> size_t { return len; }
     8cc:	02892c03          	lw	s8,40(s2)
# static auto action_drop(entity_id_t const eid, name_t const obj_nm) -> void {
     8d0:	01312e23          	sw	s3,28(sp)
     8d4:	01512a23          	sw	s5,20(sp)
     8d8:	01712623          	sw	s7,12(sp)
     8dc:	01912223          	sw	s9,4(sp)
     8e0:	02112623          	sw	ra,44(sp)
     8e4:	01612823          	sw	s6,16(sp)
     8e8:	00050993          	mv	s3,a0
     8ec:	00058a93          	mv	s5,a1
#   entity &ent = entities[eid];
#   auto &lso = ent.objects;
#   size_t const n = lso.length();
#   for (size_t i = 0; i < n; ++i) {
     8f0:	00000b93          	li	s7,0
     8f4:	b3ca0a13          	addi	s4,s4,-1220
#     object_id_t const oid = lso.at(i);
#     if (!strings_equal(objects[oid].name, obj_nm)) {
     8f8:	00002cb7          	lui	s9,0x2
#   for (size_t i = 0; i < n; ++i) {
     8fc:	058b9a63          	bne	s7,s8,950 <_ZL11action_drophPKc+0xbc>
#     if (locations[ent.location].objects.add(oid)) {
#       lso.remove_at_index(i);
#     }
#     return;
#   }
#   uart_send_str("u don't have ");
     900:	00002537          	lui	a0,0x2
     904:	93050513          	addi	a0,a0,-1744 # 1930 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x524>
     908:	009000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str(obj_nm);
     90c:	000a8513          	mv	a0,s5
     910:	001000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str("\r\n\r\n");
# }
     914:	02812403          	lw	s0,40(sp)
     918:	02c12083          	lw	ra,44(sp)
     91c:	02412483          	lw	s1,36(sp)
     920:	02012903          	lw	s2,32(sp)
     924:	01c12983          	lw	s3,28(sp)
     928:	01812a03          	lw	s4,24(sp)
     92c:	01412a83          	lw	s5,20(sp)
     930:	01012b03          	lw	s6,16(sp)
     934:	00c12b83          	lw	s7,12(sp)
     938:	00812c03          	lw	s8,8(sp)
     93c:	00412c83          	lw	s9,4(sp)
#   uart_send_str("\r\n\r\n");
     940:	00001537          	lui	a0,0x1
     944:	46450513          	addi	a0,a0,1124 # 1464 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x58>
# }
     948:	03010113          	addi	sp,sp,48
#   uart_send_str("\r\n\r\n");
     94c:	7c40006f          	j	1110 <_ZL13uart_send_strPKc>
#       return data[ix];
     950:	00894b03          	lbu	s6,8(s2)
#     if (!strings_equal(objects[oid].name, obj_nm)) {
     954:	b2cc8793          	addi	a5,s9,-1236 # 1b2c <_ZL7objects>
     958:	000a8593          	mv	a1,s5
     95c:	002b1713          	slli	a4,s6,0x2
     960:	00e787b3          	add	a5,a5,a4
     964:	0007a503          	lw	a0,0(a5)
     968:	6c8000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     96c:	00051863          	bnez	a0,97c <_ZL11action_drophPKc+0xe8>
     970:	00190913          	addi	s2,s2,1
#   for (size_t i = 0; i < n; ++i) {
     974:	001b8b93          	addi	s7,s7,1
     978:	f85ff06f          	j	8fc <_ZL11action_drophPKc+0x68>
#     if (locations[ent.location].objects.add(oid)) {
     97c:	013407b3          	add	a5,s0,s3
     980:	00279793          	slli	a5,a5,0x2
     984:	413787b3          	sub	a5,a5,s3
     988:	00279793          	slli	a5,a5,0x2
     98c:	00fa07b3          	add	a5,s4,a5
     990:	0047c683          	lbu	a3,4(a5)
#     if (len == Size - 1) {
     994:	000027b7          	lui	a5,0x2
     998:	bc078793          	addi	a5,a5,-1088 # 1bc0 <_ZL9locations>
     99c:	00269713          	slli	a4,a3,0x2
     9a0:	00d70733          	add	a4,a4,a3
     9a4:	00571713          	slli	a4,a4,0x5
     9a8:	00e787b3          	add	a5,a5,a4
     9ac:	0847a703          	lw	a4,132(a5)
     9b0:	07f00693          	li	a3,127
     9b4:	04d70a63          	beq	a4,a3,a08 <_ZL11action_drophPKc+0x174>
#     data[len] = elem;
     9b8:	00e786b3          	add	a3,a5,a4
     9bc:	01668223          	sb	s6,4(a3)
# }
     9c0:	02812403          	lw	s0,40(sp)
#   auto &lso = ent.objects;
     9c4:	00848513          	addi	a0,s1,8
# }
     9c8:	02c12083          	lw	ra,44(sp)
     9cc:	02412483          	lw	s1,36(sp)
     9d0:	02012903          	lw	s2,32(sp)
     9d4:	01c12983          	lw	s3,28(sp)
     9d8:	01412a83          	lw	s5,20(sp)
     9dc:	01012b03          	lw	s6,16(sp)
     9e0:	00812c03          	lw	s8,8(sp)
     9e4:	00412c83          	lw	s9,4(sp)
#     ++len;
     9e8:	00170713          	addi	a4,a4,1
#       lso.remove_at_index(i);
     9ec:	000b8593          	mv	a1,s7
     9f0:	00aa0533          	add	a0,s4,a0
# }
     9f4:	00c12b83          	lw	s7,12(sp)
     9f8:	01812a03          	lw	s4,24(sp)
#     ++len;
     9fc:	08e7a223          	sw	a4,132(a5)
# }
     a00:	03010113          	addi	sp,sp,48
#       lso.remove_at_index(i);
     a04:	2090006f          	j	140c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0>
# }
     a08:	02c12083          	lw	ra,44(sp)
     a0c:	02812403          	lw	s0,40(sp)
     a10:	02412483          	lw	s1,36(sp)
     a14:	02012903          	lw	s2,32(sp)
     a18:	01c12983          	lw	s3,28(sp)
     a1c:	01812a03          	lw	s4,24(sp)
     a20:	01412a83          	lw	s5,20(sp)
     a24:	01012b03          	lw	s6,16(sp)
     a28:	00c12b83          	lw	s7,12(sp)
     a2c:	00812c03          	lw	s8,8(sp)
     a30:	00412c83          	lw	s9,4(sp)
     a34:	03010113          	addi	sp,sp,48
     a38:	00008067          	ret

00000a3c <_ZL9action_gohh>:
# 
# static auto action_go(entity_id_t const eid, direction_t const dir) -> void {
#   entity &ent = entities[eid];
#   location &loc = locations[ent.location];
     a3c:	00151793          	slli	a5,a0,0x1
     a40:	00a78733          	add	a4,a5,a0
     a44:	00271713          	slli	a4,a4,0x2
     a48:	000028b7          	lui	a7,0x2
     a4c:	40a70733          	sub	a4,a4,a0
     a50:	b3c88693          	addi	a3,a7,-1220 # 1b3c <_ZL8entities>
     a54:	00271713          	slli	a4,a4,0x2
     a58:	00e68733          	add	a4,a3,a4
     a5c:	00474683          	lbu	a3,4(a4)
#     if (ix < len) {
     a60:	00002637          	lui	a2,0x2
     a64:	bc060713          	addi	a4,a2,-1088 # 1bc0 <_ZL9locations>
     a68:	00269813          	slli	a6,a3,0x2
     a6c:	00d80833          	add	a6,a6,a3
     a70:	00581693          	slli	a3,a6,0x5
     a74:	00d70733          	add	a4,a4,a3
     a78:	09c72683          	lw	a3,156(a4)
     a7c:	b3c88e13          	addi	t3,a7,-1220
     a80:	bc060613          	addi	a2,a2,-1088
     a84:	00d5f863          	bgeu	a1,a3,a94 <_ZL9action_gohh+0x58>
#       return data[ix];
     a88:	00b705b3          	add	a1,a4,a1
     a8c:	0945c883          	lbu	a7,148(a1)
#   location_id_t const to = loc.exits.at(dir);
#   if (!to) {
     a90:	00089863          	bnez	a7,aa0 <_ZL9action_gohh+0x64>
#     uart_send_str("cannot go there\r\n\r\n");
     a94:	00002537          	lui	a0,0x2
     a98:	94050513          	addi	a0,a0,-1728 # 1940 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x534>
     a9c:	6740006f          	j	1110 <_ZL13uart_send_strPKc>
#     if (len == Size - 1) {
     aa0:	00289693          	slli	a3,a7,0x2
     aa4:	011686b3          	add	a3,a3,a7
     aa8:	00569693          	slli	a3,a3,0x5
     aac:	00d606b3          	add	a3,a2,a3
     ab0:	0906a583          	lw	a1,144(a3)
     ab4:	00700313          	li	t1,7
     ab8:	08658063          	beq	a1,t1,b38 <_ZL9action_gohh+0xfc>
#     data[len] = elem;
     abc:	00b68333          	add	t1,a3,a1
#     ++len;
     ac0:	00158593          	addi	a1,a1,1
#     data[len] = elem;
     ac4:	08a30423          	sb	a0,136(t1)
#     ++len;
     ac8:	08b6a823          	sw	a1,144(a3)
     acc:	00070313          	mv	t1,a4
#     for (size_t i = 0; i < len; ++i) {
     ad0:	00000693          	li	a3,0
     ad4:	09072583          	lw	a1,144(a4)
     ad8:	02b6fa63          	bgeu	a3,a1,b0c <_ZL9action_gohh+0xd0>
#       if (data[i] != elem) {
     adc:	08834e83          	lbu	t4,136(t1)
     ae0:	00130313          	addi	t1,t1,1
     ae4:	00ae8663          	beq	t4,a0,af0 <_ZL9action_gohh+0xb4>
#     for (size_t i = 0; i < len; ++i) {
     ae8:	00168693          	addi	a3,a3,1
     aec:	fe9ff06f          	j	ad4 <_ZL9action_gohh+0x98>
#       --len;
     af0:	00581813          	slli	a6,a6,0x5
     af4:	fff58593          	addi	a1,a1,-1
     af8:	01060633          	add	a2,a2,a6
     afc:	08b62823          	sw	a1,144(a2)
     b00:	00d70733          	add	a4,a4,a3
#       for (size_t j = i; j < len; ++j) {
     b04:	00170713          	addi	a4,a4,1
     b08:	02b6e063          	bltu	a3,a1,b28 <_ZL9action_gohh+0xec>
#     return;
#   }
#   if (locations[to].entities.add(eid)) {
#     loc.entities.remove(eid);
#     ent.location = to;
     b0c:	00a787b3          	add	a5,a5,a0
     b10:	00279793          	slli	a5,a5,0x2
     b14:	40a787b3          	sub	a5,a5,a0
     b18:	00279793          	slli	a5,a5,0x2
     b1c:	00fe07b3          	add	a5,t3,a5
     b20:	01178223          	sb	a7,4(a5)
     b24:	00008067          	ret
#         data[j] = data[j + 1];
     b28:	08874603          	lbu	a2,136(a4)
     b2c:	00168693          	addi	a3,a3,1
     b30:	08c703a3          	sb	a2,135(a4)
#       for (size_t j = i; j < len; ++j) {
     b34:	fd1ff06f          	j	b04 <_ZL9action_gohh+0xc8>
#   }
# }
     b38:	00008067          	ret

00000b3c <_ZL11action_givehPKcS0_>:
# 
# static auto action_give(entity_id_t const eid, name_t const obj_nm,
#                         name_t const to_ent_nm) -> void {
     b3c:	fd010113          	addi	sp,sp,-48
     b40:	02812423          	sw	s0,40(sp)
#   entity &ent = entities[eid];
#   location &loc = locations[ent.location];
     b44:	00151413          	slli	s0,a0,0x1
     b48:	00a407b3          	add	a5,s0,a0
     b4c:	00279793          	slli	a5,a5,0x2
#                         name_t const to_ent_nm) -> void {
     b50:	01612823          	sw	s6,16(sp)
#   location &loc = locations[ent.location];
     b54:	40a787b3          	sub	a5,a5,a0
     b58:	00002b37          	lui	s6,0x2
     b5c:	b3cb0713          	addi	a4,s6,-1220 # 1b3c <_ZL8entities>
     b60:	00279793          	slli	a5,a5,0x2
#                         name_t const to_ent_nm) -> void {
     b64:	03212023          	sw	s2,32(sp)
     b68:	01312e23          	sw	s3,28(sp)
     b6c:	01412c23          	sw	s4,24(sp)
     b70:	01512a23          	sw	s5,20(sp)
     b74:	01812423          	sw	s8,8(sp)
     b78:	01912223          	sw	s9,4(sp)
#   location &loc = locations[ent.location];
     b7c:	00f707b3          	add	a5,a4,a5
#                         name_t const to_ent_nm) -> void {
     b80:	02112623          	sw	ra,44(sp)
     b84:	02912223          	sw	s1,36(sp)
     b88:	01712623          	sw	s7,12(sp)
#   location &loc = locations[ent.location];
     b8c:	0047c703          	lbu	a4,4(a5)
#   auto length() const -> size_t { return len; }
     b90:	00002937          	lui	s2,0x2
     b94:	bc090913          	addi	s2,s2,-1088 # 1bc0 <_ZL9locations>
     b98:	00271793          	slli	a5,a4,0x2
     b9c:	00e787b3          	add	a5,a5,a4
     ba0:	00579793          	slli	a5,a5,0x5
     ba4:	00f90933          	add	s2,s2,a5
     ba8:	09092c83          	lw	s9,144(s2)
#                         name_t const to_ent_nm) -> void {
     bac:	00050a93          	mv	s5,a0
     bb0:	00058993          	mv	s3,a1
     bb4:	00060a13          	mv	s4,a2
#   auto &lse = loc.entities;
#   size_t const n = lse.length();
#   for (size_t i = 0; i < n; ++i) {
     bb8:	00000c13          	li	s8,0
     bbc:	b3cb0b13          	addi	s6,s6,-1220
     bc0:	019c1c63          	bne	s8,s9,bd8 <_ZL11action_givehPKcS0_+0x9c>
#     }
#     uart_send_str(obj_nm);
#     uart_send_str(" not in inventory\r\n\r\n");
#     return;
#   }
#   uart_send_str(to_ent_nm);
     bc4:	000a0513          	mv	a0,s4
     bc8:	548000ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_str(" is not here\r\n\r\n");
     bcc:	00002537          	lui	a0,0x2
     bd0:	96c50513          	addi	a0,a0,-1684 # 196c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x560>
     bd4:	0700006f          	j	c44 <_ZL11action_givehPKcS0_+0x108>
#     entity &to = entities[lse.at(i)];
     bd8:	08894b83          	lbu	s7,136(s2)
#     if (!strings_equal(to.name, to_ent_nm)) {
     bdc:	000a0593          	mv	a1,s4
     be0:	001b9493          	slli	s1,s7,0x1
     be4:	017487b3          	add	a5,s1,s7
     be8:	00279793          	slli	a5,a5,0x2
     bec:	417787b3          	sub	a5,a5,s7
     bf0:	00279793          	slli	a5,a5,0x2
     bf4:	00fb07b3          	add	a5,s6,a5
     bf8:	0007a503          	lw	a0,0(a5)
     bfc:	434000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     c00:	00051863          	bnez	a0,c10 <_ZL11action_givehPKcS0_+0xd4>
     c04:	00190913          	addi	s2,s2,1
#   for (size_t i = 0; i < n; ++i) {
     c08:	001c0c13          	addi	s8,s8,1
     c0c:	fb5ff06f          	j	bc0 <_ZL11action_givehPKcS0_+0x84>
#   auto length() const -> size_t { return len; }
     c10:	01540433          	add	s0,s0,s5
     c14:	00241413          	slli	s0,s0,0x2
     c18:	41540433          	sub	s0,s0,s5
     c1c:	00241413          	slli	s0,s0,0x2
     c20:	008b0933          	add	s2,s6,s0
     c24:	02892c03          	lw	s8,40(s2)
#     for (size_t j = 0; j < m; j++) {
     c28:	00000a13          	li	s4,0
#       if (!strings_equal(objects[oid].name, obj_nm)) {
     c2c:	00002cb7          	lui	s9,0x2
#     for (size_t j = 0; j < m; j++) {
     c30:	058a1463          	bne	s4,s8,c78 <_ZL11action_givehPKcS0_+0x13c>
#     uart_send_str(obj_nm);
     c34:	00098513          	mv	a0,s3
     c38:	4d8000ef          	jal	1110 <_ZL13uart_send_strPKc>
#     uart_send_str(" not in inventory\r\n\r\n");
     c3c:	00002537          	lui	a0,0x2
     c40:	95450513          	addi	a0,a0,-1708 # 1954 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x548>
# }
     c44:	02812403          	lw	s0,40(sp)
     c48:	02c12083          	lw	ra,44(sp)
     c4c:	02412483          	lw	s1,36(sp)
     c50:	02012903          	lw	s2,32(sp)
     c54:	01c12983          	lw	s3,28(sp)
     c58:	01812a03          	lw	s4,24(sp)
     c5c:	01412a83          	lw	s5,20(sp)
     c60:	01012b03          	lw	s6,16(sp)
     c64:	00c12b83          	lw	s7,12(sp)
     c68:	00812c03          	lw	s8,8(sp)
     c6c:	00412c83          	lw	s9,4(sp)
     c70:	03010113          	addi	sp,sp,48
#   uart_send_str(" is not here\r\n\r\n");
     c74:	49c0006f          	j	1110 <_ZL13uart_send_strPKc>
#       return data[ix];
     c78:	00894a83          	lbu	s5,8(s2)
#       if (!strings_equal(objects[oid].name, obj_nm)) {
     c7c:	b2cc8793          	addi	a5,s9,-1236 # 1b2c <_ZL7objects>
     c80:	00098593          	mv	a1,s3
     c84:	002a9713          	slli	a4,s5,0x2
     c88:	00e787b3          	add	a5,a5,a4
     c8c:	0007a503          	lw	a0,0(a5)
     c90:	3a0000ef          	jal	1030 <_ZL13strings_equalPKcS0_>
     c94:	00051863          	bnez	a0,ca4 <_ZL11action_givehPKcS0_+0x168>
     c98:	00190913          	addi	s2,s2,1
#     for (size_t j = 0; j < m; j++) {
     c9c:	001a0a13          	addi	s4,s4,1
     ca0:	f91ff06f          	j	c30 <_ZL11action_givehPKcS0_+0xf4>
#     if (len == Size - 1) {
     ca4:	017487b3          	add	a5,s1,s7
     ca8:	00279793          	slli	a5,a5,0x2
     cac:	417787b3          	sub	a5,a5,s7
     cb0:	00279793          	slli	a5,a5,0x2
     cb4:	00fb07b3          	add	a5,s6,a5
     cb8:	0287a703          	lw	a4,40(a5)
     cbc:	01f00693          	li	a3,31
     cc0:	04d70a63          	beq	a4,a3,d14 <_ZL11action_givehPKcS0_+0x1d8>
#     data[len] = elem;
     cc4:	00e786b3          	add	a3,a5,a4
     cc8:	01568423          	sb	s5,8(a3)
#     auto &lso = ent.objects;
     ccc:	00840513          	addi	a0,s0,8
# }
     cd0:	02812403          	lw	s0,40(sp)
     cd4:	02c12083          	lw	ra,44(sp)
     cd8:	02412483          	lw	s1,36(sp)
     cdc:	02012903          	lw	s2,32(sp)
     ce0:	01c12983          	lw	s3,28(sp)
     ce4:	01412a83          	lw	s5,20(sp)
     ce8:	00c12b83          	lw	s7,12(sp)
     cec:	00812c03          	lw	s8,8(sp)
     cf0:	00412c83          	lw	s9,4(sp)
#     ++len;
     cf4:	00170713          	addi	a4,a4,1
#         lso.remove_at_index(j);
     cf8:	000a0593          	mv	a1,s4
     cfc:	00ab0533          	add	a0,s6,a0
# }
     d00:	01812a03          	lw	s4,24(sp)
     d04:	01012b03          	lw	s6,16(sp)
#     ++len;
     d08:	02e7a423          	sw	a4,40(a5)
# }
     d0c:	03010113          	addi	sp,sp,48
#         lso.remove_at_index(j);
     d10:	6fc0006f          	j	140c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0>
# }
     d14:	02c12083          	lw	ra,44(sp)
     d18:	02812403          	lw	s0,40(sp)
     d1c:	02412483          	lw	s1,36(sp)
     d20:	02012903          	lw	s2,32(sp)
     d24:	01c12983          	lw	s3,28(sp)
     d28:	01812a03          	lw	s4,24(sp)
     d2c:	01412a83          	lw	s5,20(sp)
     d30:	01012b03          	lw	s6,16(sp)
     d34:	00c12b83          	lw	s7,12(sp)
     d38:	00812c03          	lw	s8,8(sp)
     d3c:	00412c83          	lw	s9,4(sp)
     d40:	03010113          	addi	sp,sp,48
     d44:	00008067          	ret

00000d48 <_ZL10print_helpv>:
# 
# static auto print_help() -> void {
#   uart_send_str(
     d48:	00002537          	lui	a0,0x2
     d4c:	98050513          	addi	a0,a0,-1664 # 1980 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x574>
     d50:	3c00006f          	j	1110 <_ZL13uart_send_strPKc>

00000d54 <_ZL27input_escape_sequence_clearv>:
# }
# 
# static char input_escape_sequence[8];
# static auto input_escape_sequence_clear() -> void {
#   for (size_t i = 0; i < sizeof(input_escape_sequence); ++i) {
#     input_escape_sequence[i] = '\0';
     d54:	000027b7          	lui	a5,0x2
     d58:	f007a023          	sw	zero,-256(a5) # 1f00 <_ZL21input_escape_sequence>
     d5c:	f0078793          	addi	a5,a5,-256
     d60:	0007a223          	sw	zero,4(a5)
#   }
# }
     d64:	00008067          	ret

00000d68 <_ZL5inputR14command_buffer>:
# 
# enum class input_state { NORMAL, ESCAPE, ESCAPE_BRACKET };
# 
# static auto input(command_buffer &cmd_buf) -> void {
     d68:	fd010113          	addi	sp,sp,-48
     d6c:	02812423          	sw	s0,40(sp)
     d70:	02912223          	sw	s1,36(sp)
     d74:	01312e23          	sw	s3,28(sp)
     d78:	01412c23          	sw	s4,24(sp)
     d7c:	01512a23          	sw	s5,20(sp)
     d80:	01612823          	sw	s6,16(sp)
     d84:	01712623          	sw	s7,12(sp)
     d88:	01812423          	sw	s8,8(sp)
     d8c:	01912223          	sw	s9,4(sp)
     d90:	01a12023          	sw	s10,0(sp)
     d94:	02112623          	sw	ra,44(sp)
     d98:	03212023          	sw	s2,32(sp)
     d9c:	00050413          	mv	s0,a0
#   auto reset() -> void { cursor_ = end_ = 0; }
     da0:	040508a3          	sb	zero,81(a0)
     da4:	04050823          	sb	zero,80(a0)
#   cmd_buf.reset();
#   input_state state = input_state::NORMAL;
#   int escape_sequence_parameter = 0;
     da8:	00000d13          	li	s10,0
#   input_state state = input_state::NORMAL;
     dac:	00000493          	li	s1,0
# 
#   while (true) {
#     char const ch = uart_read_char();
#     led_set(~ch);
#     switch (state) {
     db0:	00100993          	li	s3,1
     db4:	00200a13          	li	s4,2
#         state = input_state::NORMAL;
#       }
#       break;
# 
#     case input_state::ESCAPE_BRACKET:
#       if (ch >= '0' && ch <= '9') {
     db8:	00900a93          	li	s5,9
#         escape_sequence_parameter = escape_sequence_parameter * 10 + (ch - '0');
#       } else {
#         switch (ch) {
     dbc:	04400b13          	li	s6,68
#         case 'D': // arrow left
#           if (cmd_buf.move_cursor_left()) {
#             uart_send_str("\x1B[D");
     dc0:	00002bb7          	lui	s7,0x2
#         switch (ch) {
     dc4:	07e00c13          	li	s8,126
#             uart_send_str("\x1B[C");
#           }
#           break;
# 
#         case '~': // delete
#           if (escape_sequence_parameter == 3) {
     dc8:	00300c93          	li	s9,3
#     char const ch = uart_read_char();
     dcc:	37c000ef          	jal	1148 <_ZL14uart_read_charv>
#     led_set(~ch);
     dd0:	fff54793          	not	a5,a0
     dd4:	fef02e23          	sw	a5,-4(zero) # fffffffc <__bss_end+0xffffe0f4>
#     char const ch = uart_read_char();
     dd8:	00050913          	mv	s2,a0
#     switch (state) {
     ddc:	17348863          	beq	s1,s3,f4c <_ZL5inputR14command_buffer+0x1e4>
     de0:	17448e63          	beq	s1,s4,f5c <_ZL5inputR14command_buffer+0x1f4>
#       if (ch == 0x1B) {
     de4:	01b00793          	li	a5,27
     de8:	06f50663          	beq	a0,a5,e54 <_ZL5inputR14command_buffer+0xec>
#       } else if (ch == CHAR_BACKSPACE) {
     dec:	07f00793          	li	a5,127
     df0:	08f51863          	bne	a0,a5,e80 <_ZL5inputR14command_buffer+0x118>
#     if (cursor_ == 0) {
     df4:	05044603          	lbu	a2,80(s0)
     df8:	00000493          	li	s1,0
     dfc:	fc0608e3          	beqz	a2,dcc <_ZL5inputR14command_buffer+0x64>
#     if (cursor_ == end_) {
     e00:	05144583          	lbu	a1,81(s0)
#       --cursor_;
     e04:	fff60693          	addi	a3,a2,-1
     e08:	0ff6f693          	zext.b	a3,a3
#       --end_;
     e0c:	fff58713          	addi	a4,a1,-1
     e10:	0ff77713          	zext.b	a4,a4
     e14:	00c407b3          	add	a5,s0,a2
#     if (cursor_ == end_) {
     e18:	04b61863          	bne	a2,a1,e68 <_ZL5inputR14command_buffer+0x100>
#       --end_;
     e1c:	04e408a3          	sb	a4,81(s0)
#       --cursor_;
     e20:	04d40823          	sb	a3,80(s0)
#           uart_send_char(ch);
     e24:	07f00513          	li	a0,127
     e28:	30c000ef          	jal	1134 <_ZL14uart_send_charc>
#           cmd_buf.apply_on_chars_from_cursor_to_end(
     e2c:	00040513          	mv	a0,s0
     e30:	594000ef          	jal	13c4 <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0>
#           uart_send_char(' ');
     e34:	02000513          	li	a0,32
     e38:	2fc000ef          	jal	1134 <_ZL14uart_send_charc>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     e3c:	05144503          	lbu	a0,81(s0)
     e40:	05044783          	lbu	a5,80(s0)
     e44:	40f50533          	sub	a0,a0,a5
#           uart_send_move_back(cmd_buf.characters_after_cursor() + 1);
     e48:	00150513          	addi	a0,a0,1
#         uart_send_move_back(cmd_buf.characters_after_cursor());
     e4c:	27c000ef          	jal	10c8 <_ZL19uart_send_move_backj>
     e50:	1400006f          	j	f90 <_ZL5inputR14command_buffer+0x228>
#         state = input_state::ESCAPE;
     e54:	00100493          	li	s1,1
     e58:	f75ff06f          	j	dcc <_ZL5inputR14command_buffer+0x64>
#       line_[i] = line_[i + 1];
     e5c:	0007c603          	lbu	a2,0(a5)
     e60:	00178793          	addi	a5,a5,1
     e64:	fec78f23          	sb	a2,-2(a5)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     e68:	40878633          	sub	a2,a5,s0
     e6c:	fff60613          	addi	a2,a2,-1
     e70:	feb666e3          	bltu	a2,a1,e5c <_ZL5inputR14command_buffer+0xf4>
#     --cursor_;
     e74:	04d40823          	sb	a3,80(s0)
#     --end_;
     e78:	04e408a3          	sb	a4,81(s0)
#     return true;
     e7c:	fa9ff06f          	j	e24 <_ZL5inputR14command_buffer+0xbc>
#       } else if (ch == CHAR_CARRIAGE_RETURN || cmd_buf.is_full()) {
     e80:	00d00713          	li	a4,13
#     if (cursor_ == end_) {
     e84:	05144783          	lbu	a5,81(s0)
#       } else if (ch == CHAR_CARRIAGE_RETURN || cmd_buf.is_full()) {
     e88:	00e50663          	beq	a0,a4,e94 <_ZL5inputR14command_buffer+0x12c>
     e8c:	04f00493          	li	s1,79
     e90:	04979263          	bne	a5,s1,ed4 <_ZL5inputR14command_buffer+0x16c>
#   auto set_eos() -> void { line_[end_] = '\0'; }
     e94:	00f407b3          	add	a5,s0,a5
     e98:	00078023          	sb	zero,0(a5)
#         escape_sequence_parameter = 0;
#       }
#       break;
#     }
#   }
# }
     e9c:	02c12083          	lw	ra,44(sp)
     ea0:	02812403          	lw	s0,40(sp)
     ea4:	02412483          	lw	s1,36(sp)
     ea8:	02012903          	lw	s2,32(sp)
     eac:	01c12983          	lw	s3,28(sp)
     eb0:	01812a03          	lw	s4,24(sp)
     eb4:	01412a83          	lw	s5,20(sp)
     eb8:	01012b03          	lw	s6,16(sp)
     ebc:	00c12b83          	lw	s7,12(sp)
     ec0:	00812c03          	lw	s8,8(sp)
     ec4:	00412c83          	lw	s9,4(sp)
     ec8:	00012d03          	lw	s10,0(sp)
     ecc:	03010113          	addi	sp,sp,48
     ed0:	00008067          	ret
#         uart_send_char(ch);
     ed4:	260000ef          	jal	1134 <_ZL14uart_send_charc>
#     if (end_ == sizeof(line_) - 1) {
     ed8:	05144683          	lbu	a3,81(s0)
     edc:	02968663          	beq	a3,s1,f08 <_ZL5inputR14command_buffer+0x1a0>
#     if (cursor_ == end_) {
     ee0:	05044703          	lbu	a4,80(s0)
#       ++end_;
     ee4:	00168793          	addi	a5,a3,1
     ee8:	0ff7f793          	zext.b	a5,a5
#       ++cursor_;
     eec:	00170613          	addi	a2,a4,1
     ef0:	0ff67613          	zext.b	a2,a2
#     if (cursor_ == end_) {
     ef4:	02e69663          	bne	a3,a4,f20 <_ZL5inputR14command_buffer+0x1b8>
#       line_[cursor_] = ch;
     ef8:	00d406b3          	add	a3,s0,a3
     efc:	01268023          	sb	s2,0(a3)
#       ++cursor_;
     f00:	04c40823          	sb	a2,80(s0)
#       ++end_;
     f04:	04f408a3          	sb	a5,81(s0)
#         cmd_buf.apply_on_chars_from_cursor_to_end(
     f08:	00040513          	mv	a0,s0
     f0c:	4b8000ef          	jal	13c4 <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     f10:	05144503          	lbu	a0,81(s0)
     f14:	05044783          	lbu	a5,80(s0)
#         uart_send_move_back(cmd_buf.characters_after_cursor());
     f18:	40f50533          	sub	a0,a0,a5
     f1c:	f31ff06f          	j	e4c <_ZL5inputR14command_buffer+0xe4>
#     ++end_;
     f20:	04f408a3          	sb	a5,81(s0)
#     for (size_t i = end_; i > cursor_; --i) {
     f24:	00f76a63          	bltu	a4,a5,f38 <_ZL5inputR14command_buffer+0x1d0>
#     line_[cursor_] = ch;
     f28:	00e40733          	add	a4,s0,a4
     f2c:	01270023          	sb	s2,0(a4)
#     ++cursor_;
     f30:	04c40823          	sb	a2,80(s0)
#     return true;
     f34:	fd5ff06f          	j	f08 <_ZL5inputR14command_buffer+0x1a0>
#       line_[i] = line_[i - 1];
     f38:	fff78793          	addi	a5,a5,-1
     f3c:	00f406b3          	add	a3,s0,a5
     f40:	0006c583          	lbu	a1,0(a3)
     f44:	00b680a3          	sb	a1,1(a3)
#     for (size_t i = end_; i > cursor_; --i) {
     f48:	fddff06f          	j	f24 <_ZL5inputR14command_buffer+0x1bc>
#       if (ch == 0x5B) {
     f4c:	fa550493          	addi	s1,a0,-91
     f50:	0014b493          	seqz	s1,s1
     f54:	00149493          	slli	s1,s1,0x1
     f58:	e75ff06f          	j	dcc <_ZL5inputR14command_buffer+0x64>
#       if (ch >= '0' && ch <= '9') {
     f5c:	fd050713          	addi	a4,a0,-48
     f60:	0ff77793          	zext.b	a5,a4
     f64:	00faec63          	bltu	s5,a5,f7c <_ZL5inputR14command_buffer+0x214>
#         escape_sequence_parameter = escape_sequence_parameter * 10 + (ch - '0');
     f68:	002d1793          	slli	a5,s10,0x2
     f6c:	01a787b3          	add	a5,a5,s10
     f70:	00179793          	slli	a5,a5,0x1
     f74:	00f70d33          	add	s10,a4,a5
     f78:	e55ff06f          	j	dcc <_ZL5inputR14command_buffer+0x64>
#         switch (ch) {
     f7c:	01650e63          	beq	a0,s6,f98 <_ZL5inputR14command_buffer+0x230>
     f80:	05850a63          	beq	a0,s8,fd4 <_ZL5inputR14command_buffer+0x26c>
     f84:	04300793          	li	a5,67
     f88:	02f50663          	beq	a0,a5,fb4 <_ZL5inputR14command_buffer+0x24c>
#         escape_sequence_parameter = 0;
     f8c:	00000d13          	li	s10,0
#         state = input_state::NORMAL;
     f90:	00000493          	li	s1,0
     f94:	e39ff06f          	j	dcc <_ZL5inputR14command_buffer+0x64>
#     if (cursor_ == 0) {
     f98:	05044783          	lbu	a5,80(s0)
     f9c:	fe0788e3          	beqz	a5,f8c <_ZL5inputR14command_buffer+0x224>
#     --cursor_;
     fa0:	fff78793          	addi	a5,a5,-1
     fa4:	04f40823          	sb	a5,80(s0)
#             uart_send_str("\x1B[D");
     fa8:	a5cb8513          	addi	a0,s7,-1444 # 1a5c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x650>
#             uart_send_str("\x1B[C");
     fac:	164000ef          	jal	1110 <_ZL13uart_send_strPKc>
     fb0:	fddff06f          	j	f8c <_ZL5inputR14command_buffer+0x224>
#     if (cursor_ == end_) {
     fb4:	05044783          	lbu	a5,80(s0)
     fb8:	05144703          	lbu	a4,81(s0)
     fbc:	fcf708e3          	beq	a4,a5,f8c <_ZL5inputR14command_buffer+0x224>
#     ++cursor_;
     fc0:	00178793          	addi	a5,a5,1
#             uart_send_str("\x1B[C");
     fc4:	00002537          	lui	a0,0x2
#     ++cursor_;
     fc8:	04f40823          	sb	a5,80(s0)
#             uart_send_str("\x1B[C");
     fcc:	a6050513          	addi	a0,a0,-1440 # 1a60 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x654>
     fd0:	fddff06f          	j	fac <_ZL5inputR14command_buffer+0x244>
#           if (escape_sequence_parameter == 3) {
     fd4:	fb9d1ce3          	bne	s10,s9,f8c <_ZL5inputR14command_buffer+0x224>
#     if (cursor_ == end_) {
     fd8:	05044783          	lbu	a5,80(s0)
     fdc:	05144703          	lbu	a4,81(s0)
     fe0:	00e78e63          	beq	a5,a4,ffc <_ZL5inputR14command_buffer+0x294>
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     fe4:	00f407b3          	add	a5,s0,a5
     fe8:	00178793          	addi	a5,a5,1
     fec:	408786b3          	sub	a3,a5,s0
     ff0:	02e6ea63          	bltu	a3,a4,1024 <_ZL5inputR14command_buffer+0x2bc>
#     --end_;
     ff4:	fff70713          	addi	a4,a4,-1
     ff8:	04e408a3          	sb	a4,81(s0)
#             cmd_buf.apply_on_chars_from_cursor_to_end(
     ffc:	00040513          	mv	a0,s0
    1000:	3c4000ef          	jal	13c4 <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0>
#             uart_send_char(' ');
    1004:	02000513          	li	a0,32
    1008:	12c000ef          	jal	1134 <_ZL14uart_send_charc>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
    100c:	05144503          	lbu	a0,81(s0)
    1010:	05044783          	lbu	a5,80(s0)
    1014:	40f50533          	sub	a0,a0,a5
#             uart_send_move_back(cmd_buf.characters_after_cursor() + 1);
    1018:	00150513          	addi	a0,a0,1
    101c:	0ac000ef          	jal	10c8 <_ZL19uart_send_move_backj>
    1020:	f6dff06f          	j	f8c <_ZL5inputR14command_buffer+0x224>
#       line_[i - 1] = line_[i];
    1024:	0007c683          	lbu	a3,0(a5)
    1028:	fed78fa3          	sb	a3,-1(a5)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    102c:	fbdff06f          	j	fe8 <_ZL5inputR14command_buffer+0x280>

00001030 <_ZL13strings_equalPKcS0_>:
# 
# static auto strings_equal(char const *s1, char const *s2) -> bool {
#   while (true) {
#     if (*s1 != *s2) {
    1030:	00054703          	lbu	a4,0(a0)
    1034:	0005c783          	lbu	a5,0(a1)
    1038:	00e79a63          	bne	a5,a4,104c <_ZL13strings_equalPKcS0_+0x1c>
#       return false;
#     }
#     if (!*s1 && !*s2) {
    103c:	00078c63          	beqz	a5,1054 <_ZL13strings_equalPKcS0_+0x24>
#       return true;
#     }
#     ++s1;
    1040:	00150513          	addi	a0,a0,1
#     ++s2;
    1044:	00158593          	addi	a1,a1,1
#     if (*s1 != *s2) {
    1048:	fe9ff06f          	j	1030 <_ZL13strings_equalPKcS0_>
#       return false;
    104c:	00000513          	li	a0,0
    1050:	00008067          	ret
#       return true;
    1054:	00100513          	li	a0,1
#   }
# }
    1058:	00008067          	ret

0000105c <_ZL11string_copyPKcjPc>:
# 
# static auto string_copy(char const *src, size_t src_len, char *dst) -> void {
#   while (src_len--) {
    105c:	00000793          	li	a5,0
    1060:	00f59463          	bne	a1,a5,1068 <_ZL11string_copyPKcjPc+0xc>
#     *dst++ = *src++;
#   }
# }
    1064:	00008067          	ret
#     *dst++ = *src++;
    1068:	00f50733          	add	a4,a0,a5
    106c:	00074683          	lbu	a3,0(a4)
    1070:	00f60733          	add	a4,a2,a5
    1074:	00178793          	addi	a5,a5,1
    1078:	00d70023          	sb	a3,0(a4)
    107c:	fe5ff06f          	j	1060 <_ZL11string_copyPKcjPc+0x4>

00001080 <_ZL18uart_send_hex_bytec>:
# 
# static auto uart_send_hex_byte(char const ch) -> void {
    1080:	ff010113          	addi	sp,sp,-16
    1084:	00812423          	sw	s0,8(sp)
    1088:	00050413          	mv	s0,a0
#   uart_send_hex_nibble(ch >> 4);
    108c:	00455513          	srli	a0,a0,0x4
# static auto uart_send_hex_byte(char const ch) -> void {
    1090:	00112623          	sw	ra,12(sp)
#   uart_send_hex_nibble(ch >> 4);
    1094:	018000ef          	jal	10ac <_ZL20uart_send_hex_nibblec>
#   uart_send_hex_nibble(ch & 0x0f);
    1098:	00f47513          	andi	a0,s0,15
# }
    109c:	00812403          	lw	s0,8(sp)
    10a0:	00c12083          	lw	ra,12(sp)
    10a4:	01010113          	addi	sp,sp,16
#   uart_send_hex_nibble(ch & 0x0f);
    10a8:	0040006f          	j	10ac <_ZL20uart_send_hex_nibblec>

000010ac <_ZL20uart_send_hex_nibblec>:
# 
# static auto uart_send_hex_nibble(char const nibble) -> void {
#   if (nibble < 10) {
    10ac:	00900793          	li	a5,9
    10b0:	00a7e863          	bltu	a5,a0,10c0 <_ZL20uart_send_hex_nibblec+0x14>
#     uart_send_char('0' + nibble);
    10b4:	03050513          	addi	a0,a0,48
#   } else {
#     uart_send_char('A' + (nibble - 10));
    10b8:	0ff57513          	zext.b	a0,a0
    10bc:	0780006f          	j	1134 <_ZL14uart_send_charc>
    10c0:	03750513          	addi	a0,a0,55
    10c4:	ff5ff06f          	j	10b8 <_ZL20uart_send_hex_nibblec+0xc>

000010c8 <_ZL19uart_send_move_backj>:
#   }
# }
# 
# static auto uart_send_move_back(size_t const n) -> void {
    10c8:	ff010113          	addi	sp,sp,-16
    10cc:	00812423          	sw	s0,8(sp)
    10d0:	00912223          	sw	s1,4(sp)
    10d4:	00112623          	sw	ra,12(sp)
    10d8:	00050413          	mv	s0,a0
#   for (size_t i = 0; i < n; ++i) {
    10dc:	00000493          	li	s1,0
    10e0:	00849c63          	bne	s1,s0,10f8 <_ZL19uart_send_move_backj+0x30>
#     uart_send_char('\b');
#   }
# }
    10e4:	00c12083          	lw	ra,12(sp)
    10e8:	00812403          	lw	s0,8(sp)
    10ec:	00412483          	lw	s1,4(sp)
    10f0:	01010113          	addi	sp,sp,16
    10f4:	00008067          	ret
#     uart_send_char('\b');
    10f8:	00800513          	li	a0,8
    10fc:	038000ef          	jal	1134 <_ZL14uart_send_charc>
#   for (size_t i = 0; i < n; ++i) {
    1100:	00148493          	addi	s1,s1,1
    1104:	fddff06f          	j	10e0 <_ZL19uart_send_move_backj+0x18>

00001108 <_ZL7led_seti>:
    1108:	fea02e23          	sw	a0,-4(zero) # fffffffc <__bss_end+0xffffe0f4>
    110c:	00008067          	ret

00001110 <_ZL13uart_send_strPKc>:
#     while (*UART_OUT != -1)
    1110:	fff00713          	li	a4,-1
#   while (*str) {
    1114:	00054783          	lbu	a5,0(a0)
    1118:	00079463          	bnez	a5,1120 <_ZL13uart_send_strPKc+0x10>
# }
    111c:	00008067          	ret
#     while (*UART_OUT != -1)
    1120:	ff802683          	lw	a3,-8(zero) # fffffff8 <__bss_end+0xffffe0f0>
    1124:	fee69ee3          	bne	a3,a4,1120 <_ZL13uart_send_strPKc+0x10>
#     *UART_OUT = *str++;
    1128:	00150513          	addi	a0,a0,1
    112c:	fef02c23          	sw	a5,-8(zero) # fffffff8 <__bss_end+0xffffe0f0>
    1130:	fe5ff06f          	j	1114 <_ZL13uart_send_strPKc+0x4>

00001134 <_ZL14uart_send_charc>:
#   while (*UART_OUT != -1)
    1134:	fff00793          	li	a5,-1
    1138:	ff802703          	lw	a4,-8(zero) # fffffff8 <__bss_end+0xffffe0f0>
    113c:	fef71ee3          	bne	a4,a5,1138 <_ZL14uart_send_charc+0x4>
#   *UART_OUT = ch;
    1140:	fea02c23          	sw	a0,-8(zero) # fffffff8 <__bss_end+0xffffe0f0>
# }
    1144:	00008067          	ret

00001148 <_ZL14uart_read_charv>:
#   while ((ch = *UART_IN) == -1)
    1148:	fff00793          	li	a5,-1
    114c:	ff402503          	lw	a0,-12(zero) # fffffff4 <__bss_end+0xffffe0ec>
    1150:	fef50ee3          	beq	a0,a5,114c <_ZL14uart_read_charv+0x4>
# }
    1154:	0ff57513          	zext.b	a0,a0
    1158:	00008067          	ret

0000115c <_ZL15action_mem_testv>:
#   uart_send_str("testing memory (write)\r\n");
    115c:	00002537          	lui	a0,0x2
# static auto action_mem_test() -> void {
    1160:	ff010113          	addi	sp,sp,-16
#   uart_send_str("testing memory (write)\r\n");
    1164:	a6450513          	addi	a0,a0,-1436 # 1a64 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x658>
# static auto action_mem_test() -> void {
    1168:	00812423          	sw	s0,8(sp)
    116c:	00112623          	sw	ra,12(sp)
#   uart_send_str("testing memory (write)\r\n");
    1170:	fa1ff0ef          	jal	1110 <_ZL13uart_send_strPKc>
#   char *ptr = &__heap_start;
    1174:	00002437          	lui	s0,0x2
#   while (ptr < end) {
    1178:	00800737          	lui	a4,0x800
#   char *ptr = &__heap_start;
    117c:	f0840793          	addi	a5,s0,-248 # 1f08 <__bss_end>
#   char ch = 0;
    1180:	00000693          	li	a3,0
    1184:	f0840413          	addi	s0,s0,-248
#   while (ptr < end) {
    1188:	bff70713          	addi	a4,a4,-1025 # 7ffbff <__bss_end+0x7fdcf7>
    118c:	02f77663          	bgeu	a4,a5,11b8 <_ZL15action_mem_testv+0x5c>
#   uart_send_str("testing memory (read)\r\n");
    1190:	00002537          	lui	a0,0x2
    1194:	a8050513          	addi	a0,a0,-1408 # 1a80 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x674>
    1198:	f79ff0ef          	jal	1110 <_ZL13uart_send_strPKc>
#   while (ptr < end) {
    119c:	008006b7          	lui	a3,0x800
#   ptr = &__heap_start;
    11a0:	00040793          	mv	a5,s0
#   while (ptr < end) {
    11a4:	bff68693          	addi	a3,a3,-1025 # 7ffbff <__bss_end+0x7fdcf7>
    11a8:	02f6f263          	bgeu	a3,a5,11cc <_ZL15action_mem_testv+0x70>
#   uart_send_str("testing memory succeeded\r\n");
    11ac:	00002537          	lui	a0,0x2
    11b0:	ab450513          	addi	a0,a0,-1356 # 1ab4 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x6a8>
    11b4:	0380006f          	j	11ec <_ZL15action_mem_testv+0x90>
#     *ptr++ = ch++;
    11b8:	00168613          	addi	a2,a3,1
    11bc:	00178793          	addi	a5,a5,1
    11c0:	fed78fa3          	sb	a3,-1(a5)
    11c4:	0ff67693          	zext.b	a3,a2
    11c8:	fc5ff06f          	j	118c <_ZL15action_mem_testv+0x30>
#     if (*ptr++ != ch++) {
    11cc:	00178793          	addi	a5,a5,1
    11d0:	40878733          	sub	a4,a5,s0
    11d4:	fff7c603          	lbu	a2,-1(a5)
    11d8:	fff70713          	addi	a4,a4,-1
    11dc:	0ff77713          	zext.b	a4,a4
    11e0:	fce604e3          	beq	a2,a4,11a8 <_ZL15action_mem_testv+0x4c>
#       uart_send_str("!!! test memory failed\r\n");
    11e4:	00002537          	lui	a0,0x2
    11e8:	a9850513          	addi	a0,a0,-1384 # 1a98 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x68c>
# }
    11ec:	00812403          	lw	s0,8(sp)
    11f0:	00c12083          	lw	ra,12(sp)
    11f4:	01010113          	addi	sp,sp,16
#   uart_send_str("testing memory succeeded\r\n");
    11f8:	f19ff06f          	j	1110 <_ZL13uart_send_strPKc>

000011fc <_ZL23action_sdcard_test_readv>:
# static auto action_sdcard_test_read() -> void {
    11fc:	df010113          	addi	sp,sp,-528
#   sdcard_read_blocking(1, buf);
    1200:	00010593          	mv	a1,sp
    1204:	00100513          	li	a0,1
# static auto action_sdcard_test_read() -> void {
    1208:	20812423          	sw	s0,520(sp)
    120c:	20912223          	sw	s1,516(sp)
    1210:	21212023          	sw	s2,512(sp)
    1214:	20112623          	sw	ra,524(sp)
#   sdcard_read_blocking(1, buf);
    1218:	00010493          	mv	s1,sp
    121c:	0e8000ef          	jal	1304 <_ZL20sdcard_read_blockingjPc>
#   for (size_t i = 0; i < sizeof(buf); ++i) {
    1220:	00000413          	li	s0,0
    1224:	20000913          	li	s2,512
#     uart_send_char(buf[i]);
    1228:	008487b3          	add	a5,s1,s0
    122c:	0007c503          	lbu	a0,0(a5)
#   for (size_t i = 0; i < sizeof(buf); ++i) {
    1230:	00140413          	addi	s0,s0,1
#     uart_send_char(buf[i]);
    1234:	f01ff0ef          	jal	1134 <_ZL14uart_send_charc>
#   for (size_t i = 0; i < sizeof(buf); ++i) {
    1238:	ff2418e3          	bne	s0,s2,1228 <_ZL23action_sdcard_test_readv+0x2c>
# }
    123c:	20812403          	lw	s0,520(sp)
    1240:	20c12083          	lw	ra,524(sp)
    1244:	20412483          	lw	s1,516(sp)
    1248:	20012903          	lw	s2,512(sp)
#   uart_send_str("\r\n");
    124c:	00002537          	lui	a0,0x2
    1250:	82050513          	addi	a0,a0,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
# }
    1254:	21010113          	addi	sp,sp,528
#   uart_send_str("\r\n");
    1258:	eb9ff06f          	j	1110 <_ZL13uart_send_strPKc>

0000125c <_ZL24action_sdcard_test_writev>:
# static auto action_sdcard_test_write() -> void {
    125c:	df010113          	addi	sp,sp,-528
#   int8_t const buf[512] =
    1260:	000025b7          	lui	a1,0x2
    1264:	03400613          	li	a2,52
    1268:	ad058593          	addi	a1,a1,-1328 # 1ad0 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x6c4>
    126c:	00010513          	mv	a0,sp
# static auto action_sdcard_test_write() -> void {
    1270:	20112623          	sw	ra,524(sp)
#   int8_t const buf[512] =
    1274:	104000ef          	jal	1378 <memcpy>
    1278:	1cc00613          	li	a2,460
    127c:	00000593          	li	a1,0
    1280:	03410513          	addi	a0,sp,52
    1284:	0d8000ef          	jal	135c <memset>
#   sdcard_write_blocking(1, buf);
    1288:	00010593          	mv	a1,sp
    128c:	00100513          	li	a0,1
    1290:	0a0000ef          	jal	1330 <_ZL21sdcard_write_blockingjPKc>
# }
    1294:	20c12083          	lw	ra,524(sp)
    1298:	21010113          	addi	sp,sp,528
    129c:	00008067          	ret

000012a0 <_ZL20action_sdcard_statusv>:
# static auto action_sdcard_status() -> void {
    12a0:	ff010113          	addi	sp,sp,-16
    12a4:	00812423          	sw	s0,8(sp)
#   uart_send_str("SDCARD_STATUS: 0x");
    12a8:	00002537          	lui	a0,0x2
#   uint32_t const status = *SDCARD_STATUS;
    12ac:	fe402403          	lw	s0,-28(zero) # ffffffe4 <__bss_end+0xffffe0dc>
#   uart_send_str("SDCARD_STATUS: 0x");
    12b0:	b0450513          	addi	a0,a0,-1276 # 1b04 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x6f8>
# static auto action_sdcard_status() -> void {
    12b4:	00112623          	sw	ra,12(sp)
#   uart_send_str("SDCARD_STATUS: 0x");
    12b8:	e59ff0ef          	jal	1110 <_ZL13uart_send_strPKc>
#   uart_send_hex_byte(char(status >> 24));
    12bc:	01845513          	srli	a0,s0,0x18
    12c0:	dc1ff0ef          	jal	1080 <_ZL18uart_send_hex_bytec>
#   uart_send_hex_byte(char(status >> 16));
    12c4:	01045513          	srli	a0,s0,0x10
    12c8:	0ff57513          	zext.b	a0,a0
    12cc:	db5ff0ef          	jal	1080 <_ZL18uart_send_hex_bytec>
#   uart_send_char(':');
    12d0:	03a00513          	li	a0,58
    12d4:	e61ff0ef          	jal	1134 <_ZL14uart_send_charc>
#   uart_send_hex_byte(char(status >> 8));
    12d8:	00845513          	srli	a0,s0,0x8
    12dc:	0ff57513          	zext.b	a0,a0
    12e0:	da1ff0ef          	jal	1080 <_ZL18uart_send_hex_bytec>
#   uart_send_hex_byte(char(status));
    12e4:	0ff47513          	zext.b	a0,s0
    12e8:	d99ff0ef          	jal	1080 <_ZL18uart_send_hex_bytec>
# }
    12ec:	00812403          	lw	s0,8(sp)
    12f0:	00c12083          	lw	ra,12(sp)
#   uart_send_str("\r\n");
    12f4:	00002537          	lui	a0,0x2
    12f8:	82050513          	addi	a0,a0,-2016 # 1820 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x414>
# }
    12fc:	01010113          	addi	sp,sp,16
#   uart_send_str("\r\n");
    1300:	e11ff06f          	j	1110 <_ZL13uart_send_strPKc>

00001304 <_ZL20sdcard_read_blockingjPc>:
#   while (*SDCARD_BUSY)
    1304:	ff002783          	lw	a5,-16(zero) # fffffff0 <__bss_end+0xffffe0e8>
    1308:	fe079ee3          	bnez	a5,1304 <_ZL20sdcard_read_blockingjPc>
#   *SDCARD_READ_SECTOR = sector;
    130c:	fea02623          	sw	a0,-20(zero) # ffffffec <__bss_end+0xffffe0e4>
#   while (*SDCARD_BUSY)
    1310:	ff002783          	lw	a5,-16(zero) # fffffff0 <__bss_end+0xffffe0e8>
    1314:	fe079ee3          	bnez	a5,1310 <_ZL20sdcard_read_blockingjPc+0xc>
    1318:	20058793          	addi	a5,a1,512
#     *buffer512B = char(*SDCARD_NEXT_BYTE);
    131c:	fe802703          	lw	a4,-24(zero) # ffffffe8 <__bss_end+0xffffe0e0>
#     ++buffer512B;
    1320:	00158593          	addi	a1,a1,1
#     *buffer512B = char(*SDCARD_NEXT_BYTE);
    1324:	fee58fa3          	sb	a4,-1(a1)
#   for (size_t i = 0; i < 512; ++i) {
    1328:	feb79ae3          	bne	a5,a1,131c <_ZL20sdcard_read_blockingjPc+0x18>
# }
    132c:	00008067          	ret

00001330 <_ZL21sdcard_write_blockingjPKc>:
#   while (*SDCARD_BUSY)
    1330:	ff002783          	lw	a5,-16(zero) # fffffff0 <__bss_end+0xffffe0e8>
    1334:	fe079ee3          	bnez	a5,1330 <_ZL21sdcard_write_blockingjPKc>
    1338:	20058793          	addi	a5,a1,512
#     *SDCARD_NEXT_BYTE = *buffer512B;
    133c:	0005c703          	lbu	a4,0(a1)
#     ++buffer512B;
    1340:	00158593          	addi	a1,a1,1
#     *SDCARD_NEXT_BYTE = *buffer512B;
    1344:	fee02423          	sw	a4,-24(zero) # ffffffe8 <__bss_end+0xffffe0e0>
#   for (size_t i = 0; i < 512; ++i) {
    1348:	feb79ae3          	bne	a5,a1,133c <_ZL21sdcard_write_blockingjPKc+0xc>
#   *SDCARD_WRITE_SECTOR = sector;
    134c:	fea02023          	sw	a0,-32(zero) # ffffffe0 <__bss_end+0xffffe0d8>
#   while (*SDCARD_BUSY)
    1350:	ff002783          	lw	a5,-16(zero) # fffffff0 <__bss_end+0xffffe0e8>
    1354:	fe079ee3          	bnez	a5,1350 <_ZL21sdcard_write_blockingjPKc+0x20>
# }
    1358:	00008067          	ret

0000135c <memset>:
#   while (n--) {
    135c:	00c50633          	add	a2,a0,a2
#   char *ptr = reinterpret_cast<char *>(str);
    1360:	00050793          	mv	a5,a0
#   while (n--) {
    1364:	00c79463          	bne	a5,a2,136c <memset+0x10>
# }
    1368:	00008067          	ret
#     *ptr = char(ch);
    136c:	00b78023          	sb	a1,0(a5)
#     ++ptr;
    1370:	00178793          	addi	a5,a5,1
    1374:	ff1ff06f          	j	1364 <memset+0x8>

00001378 <memcpy>:
#   while (n--) {
    1378:	00000793          	li	a5,0
    137c:	00f61463          	bne	a2,a5,1384 <memcpy+0xc>
# }
    1380:	00008067          	ret
#     *p1 = *p2;
    1384:	00f58733          	add	a4,a1,a5
    1388:	00074683          	lbu	a3,0(a4)
    138c:	00f50733          	add	a4,a0,a5
    1390:	00178793          	addi	a5,a5,1
    1394:	00d70023          	sb	a3,0(a4)
#     ++p2;
    1398:	fe5ff06f          	j	137c <memcpy+0x4>

0000139c <_ZL12initiate_bssv>:
#   memset(&__bss_start, 0, &__bss_end - &__bss_start);
    139c:	00002537          	lui	a0,0x2
    13a0:	000027b7          	lui	a5,0x2
    13a4:	f0050613          	addi	a2,a0,-256 # 1f00 <_ZL21input_escape_sequence>
    13a8:	f0878793          	addi	a5,a5,-248 # 1f08 <__bss_end>
    13ac:	40c78633          	sub	a2,a5,a2
    13b0:	00000593          	li	a1,0
    13b4:	f0050513          	addi	a0,a0,-256
    13b8:	fa5ff06f          	j	135c <memset>

000013bc <_ZL16initiate_staticsv>:
# static auto initiate_statics() -> void {}
    13bc:	00008067          	ret

000013c0 <_ZL4exiti>:
    13c0:	00008067          	ret

000013c4 <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0>:
#   auto apply_on_chars_from_cursor_to_end(
    13c4:	ff010113          	addi	sp,sp,-16
    13c8:	00812423          	sw	s0,8(sp)
    13cc:	00112623          	sw	ra,12(sp)
    13d0:	00912223          	sw	s1,4(sp)
#     for (size_t i = cursor_; i < end_; ++i) {
    13d4:	05054483          	lbu	s1,80(a0)
#   auto apply_on_chars_from_cursor_to_end(
    13d8:	00050413          	mv	s0,a0
#     for (size_t i = cursor_; i < end_; ++i) {
    13dc:	05144783          	lbu	a5,81(s0)
    13e0:	00f4ec63          	bltu	s1,a5,13f8 <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0+0x34>
#   }
    13e4:	00c12083          	lw	ra,12(sp)
    13e8:	00812403          	lw	s0,8(sp)
    13ec:	00412483          	lw	s1,4(sp)
    13f0:	01010113          	addi	sp,sp,16
    13f4:	00008067          	ret
#       f(line_[i]);
    13f8:	009407b3          	add	a5,s0,s1
#               [](char const c) { uart_send_char(c); });
    13fc:	0007c503          	lbu	a0,0(a5)
#     for (size_t i = cursor_; i < end_; ++i) {
    1400:	00148493          	addi	s1,s1,1
#               [](char const c) { uart_send_char(c); });
    1404:	d31ff0ef          	jal	1134 <_ZL14uart_send_charc>
#     for (size_t i = cursor_; i < end_; ++i) {
    1408:	fd5ff06f          	j	13dc <_ZNK14command_buffer33apply_on_chars_from_cursor_to_endIZL5inputRS_EUlcE_EEvOT_.isra.0+0x18>

0000140c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0>:
#     if (len == 0 || ix >= len) {
    140c:	02052783          	lw	a5,32(a0)
    1410:	00f5fe63          	bgeu	a1,a5,142c <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x20>
#     --len;
    1414:	fff78713          	addi	a4,a5,-1
    1418:	02e52023          	sw	a4,32(a0)
    141c:	00b505b3          	add	a1,a0,a1
    1420:	00f50533          	add	a0,a0,a5
#     for (size_t i = ix; i < len; ++i) {
    1424:	00158593          	addi	a1,a1,1
    1428:	00a59463          	bne	a1,a0,1430 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x24>
#   }
    142c:	00008067          	ret
#       data[i] = data[i + 1];
    1430:	0005c783          	lbu	a5,0(a1)
    1434:	fef58fa3          	sb	a5,-1(a1)
#     for (size_t i = ix; i < len; ++i) {
    1438:	fedff06f          	j	1424 <_ZN4listIhLj32EE15remove_at_indexEj.isra.0+0x18>
